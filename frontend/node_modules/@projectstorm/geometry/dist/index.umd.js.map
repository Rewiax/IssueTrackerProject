{"version":3,"sources":["webpack://@projectstorm/react-diagrams-geometry/webpack/universalModuleDefinition","webpack://@projectstorm/react-diagrams-geometry/./src/BezierCurve.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Matrix.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Point.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Polygon.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Rectangle.ts","webpack://@projectstorm/react-diagrams-geometry/./src/index.ts","webpack://@projectstorm/react-diagrams-geometry/external \"lodash\"","webpack://@projectstorm/react-diagrams-geometry/webpack/bootstrap","webpack://@projectstorm/react-diagrams-geometry/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","BezierCurvepPoints","BezierCurve","Polygon","super","Point","this","getSource","toSVG","getSourceControl","getTargetControl","getTarget","points","length","Error","setPoints","SOURCE","SOURCE_CONTROL","TARGET_CONTROL","TARGET","point","matrix","map","row","i","asArray","_","j","reduce","acc","n","rowIndex","columnIndex","x","y","Matrix","final","mmul","asMatrix","get","pointA","pointB","matrices","m","deg","Math","cos","sin","origin","multiply","translateMatrix","scaleMatrix","rotateMatrix","data","createScaleMatrix","forEach","transform","degrees","createRotateMatrix","PI","getOrigin","offsetX","offsetY","translate","ob","clone","Object","create","doClone","dimensions","getBoundingBox","middlePoint","getTopLeft","getBottomRight","polygons","boundingBoxFromPoints","flatMap","polygon","getPoints","Rectangle","minX","maxX","minY","maxY","a","b","c","d","pointsFromBounds","width","height","tl","br","sqrt","pow","getTopRight","getBottomLeft","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAQ,yCAA2CD,IAEnDD,EAAK,yCAA2CC,IARlD,CASGK,MAAM,WACT,M,mICVA,eACA,SAEA,IAAYC,GAAZ,SAAYA,GACX,uBACA,uCACA,uCACA,uBAJD,CAAYA,EAAA,EAAAA,qBAAA,EAAAA,mBAAkB,KAO9B,MAAaC,UAAoB,EAAAC,QAChC,cACCC,MAAM,CAAC,IAAI,EAAAC,MAAM,EAAG,GAAI,IAAI,EAAAA,MAAM,EAAG,GAAI,IAAI,EAAAA,MAAM,EAAG,GAAI,IAAI,EAAAA,MAAM,EAAG,KAGxE,cACC,MAAO,IAAIC,KAAKC,YAAYC,YAAYF,KAAKG,mBAAmBD,YAAYF,KAAKI,mBAAmBF,YAAYF,KAAKK,YAAYH,UAGlI,UAAUI,GACT,GAAsB,IAAlBA,EAAOC,OACV,MAAM,IAAIC,MAAM,2CAEjBV,MAAMW,UAAUH,GAGjB,YACC,OAAON,KAAKM,OAAOX,EAAmBe,QAGvC,mBACC,OAAOV,KAAKM,OAAOX,EAAmBgB,gBAGvC,mBACC,OAAOX,KAAKM,OAAOX,EAAmBiB,gBAGvC,YACC,OAAOZ,KAAKM,OAAOX,EAAmBkB,QAGvC,UAAUC,GACTd,KAAKM,OAAOX,EAAmBe,QAAUI,EAG1C,iBAAiBA,GAChBd,KAAKM,OAAOX,EAAmBgB,gBAAkBG,EAGlD,iBAAiBA,GAChBd,KAAKM,OAAOX,EAAmBiB,gBAAkBE,EAGlD,UAAUA,GACTd,KAAKM,OAAOX,EAAmBkB,QAAUC,GA7C3C,iB,6ECVA,eAGC,YAAYC,GACXf,KAAKe,OAASA,EAGf,KAAKA,GAIJ,OAHAf,KAAKe,OAASf,KAAKe,OAAOC,KAAI,CAACC,EAAKC,IACnCH,EAAOI,UAAU,GAAGH,KAAI,CAACI,EAAGC,IAAMJ,EAAIK,QAAO,CAACC,EAAKH,EAAGI,IAAMD,EAAMvB,KAAKe,OAAOG,GAAGM,GAAKT,EAAOI,UAAUK,GAAGH,IAAI,OAExGrB,KAGR,UACC,OAAOA,KAAKe,OAGb,IAAIU,EAAkBC,GACrB,OAAO1B,KAAKmB,UAAUM,GAAUC,M,8ECnBlC,eAEA,MAAa3B,EAIZ,YAAY4B,EAAWC,GACtB5B,KAAK2B,EAAIA,EACT3B,KAAK4B,EAAIA,EAGV,UAAUD,EAAWC,GACpB5B,KAAK2B,GAAKA,EACV3B,KAAK4B,GAAKA,EAGX,QACC,OAAO,IAAI7B,EAAMC,KAAK2B,EAAG3B,KAAK4B,GAG/B,QACC,OAAO5B,KAAK2B,EAAI,IAAM3B,KAAK4B,EAG5B,WACC,OAAO,IAAI,EAAAC,OAAO,CAAC,CAAC7B,KAAK2B,GAAI,CAAC3B,KAAK4B,GAAI,CAAC,KAGzC,UAAUb,GACT,IAAIe,EAAgBf,EAAOgB,KAAK/B,KAAKgC,YACrChC,KAAK2B,EAAIG,EAAMG,IAAI,EAAG,GACtBjC,KAAK4B,EAAIE,EAAMG,IAAI,EAAG,GAGhB,mBAAmBC,EAAeC,GACxC,OAAO,IAAIpC,GAAOoC,EAAOR,EAAIO,EAAOP,GAAK,GAAIQ,EAAOP,EAAIM,EAAON,GAAK,GAG9D,mBAAmBQ,GACzB,IAAIC,EAAYD,EAAS,GACzB,IAAK,IAAIlB,EAAI,EAAGA,EAAIkB,EAAS7B,OAAQW,IACpCmB,EAAIA,EAAEN,KAAKK,EAASlB,IAErB,OAAOmB,EAGD,mBAAmBV,EAAWC,GACpC,OAAO,IAAI,EAAAC,OAAO,CACjB,CAACF,EAAG,EAAG,GACP,CAAC,EAAGC,EAAG,GACP,CAAC,EAAG,EAAG,KAIF,uBAAuBD,EAAWC,GACxC,OAAO,IAAI,EAAAC,OAAO,CACjB,CAAC,EAAG,EAAGF,GACP,CAAC,EAAG,EAAGC,GACP,CAAC,EAAG,EAAG,KAIF,oBAAoBU,GAC1B,OAAO,IAAI,EAAAT,OAAO,CACjB,CAACU,KAAKC,IAAIF,IAAO,EAAIC,KAAKE,IAAIH,GAAM,GACpC,CAACC,KAAKE,IAAIH,GAAMC,KAAKC,IAAIF,GAAM,GAC/B,CAAC,EAAG,EAAG,KAIT,yBAAyBX,EAAGC,EAAGc,GAC9B,OAAO1C,KAAK2C,SACX5C,EAAM6C,gBAAgBF,EAAOf,EAAGe,EAAOd,GACvC7B,EAAM8C,YAAYlB,EAAGC,GACrB7B,EAAM6C,iBAAiBF,EAAOf,GAAIe,EAAOd,IAI3C,0BAA0BU,EAAaI,GACtC,OAAO1C,KAAK2C,SACX5C,EAAM6C,gBAAgBF,EAAOf,EAAGe,EAAOd,GACvC7B,EAAM+C,aAAaR,GACnBvC,EAAM6C,iBAAiBF,EAAOf,GAAIe,EAAOd,KAhF5C,W,gFCFA,eACA,SAGA,MAAa/B,EAGZ,YAAYS,EAAkB,IAC7BN,KAAKM,OAASA,EAGf,YACC,OAAOc,EAAEJ,IAAIhB,KAAKM,QAASQ,GACnB,CAACA,EAAMa,EAAGb,EAAMc,KAIzB,YAAYmB,GACX/C,KAAKM,OAASc,EAAEJ,IAAI+B,GAAOjC,GACnB,IAAI,EAAAf,MAAMe,EAAM,GAAIA,EAAM,MAInC,MAAMa,EAAGC,EAAGc,GACX,IAAI3B,EAAS,EAAAhB,MAAMiD,kBAAkBrB,EAAGC,EAAGc,GAC3CtB,EAAE6B,QAAQjD,KAAKM,QAASQ,IACvBA,EAAMoC,UAAUnC,MAIlB,UAAUA,GACTK,EAAE6B,QAAQjD,KAAKM,QAASQ,IACvBA,EAAMoC,UAAUnC,MAIlB,UAAUT,GACTN,KAAKM,OAASA,EAGf,YACC,OAAON,KAAKM,OAGb,OAAO6C,GACNnD,KAAKkD,UAAU,EAAAnD,MAAMqD,mBAAmBD,GAAW,IAAMZ,KAAKc,IAAKrD,KAAKsD,cAGzE,UAAUC,EAAiBC,GAC1BpC,EAAE6B,QAAQjD,KAAKM,QAASQ,IACvBA,EAAM2C,UAAUF,EAASC,MAI3B,QAAQE,GACP1D,KAAKM,OAASc,EAAEJ,IAAI0C,EAAGpD,QAASQ,GACxBA,EAAM6C,UAIf,QACC,IAAID,EAAKE,OAAOC,OAAO7D,MAEvB,OADA0D,EAAGI,QAAQ9D,MACJ0D,EAGR,YACC,GAA2B,IAAvB1D,KAAKM,OAAOC,OACf,OAAO,KAER,IAAIwD,EAAa/D,KAAKgE,iBACtB,OAAO,EAAAjE,MAAMkE,YAAYF,EAAWG,aAAcH,EAAWI,kBAG9D,+BAA+BC,GAC9B,OAAOvE,EAAQwE,sBACdjD,EAAEkD,QAAQF,GAAWG,GACbA,EAAQC,eAKlB,6BAA6BlE,GAC5B,GAAsB,IAAlBA,EAAOC,OACV,OAAO,IAAI,EAAAkE,UAAU,EAAG,EAAG,EAAG,GAG/B,IAAIC,EAAOpE,EAAO,GAAGqB,EACjBgD,EAAOrE,EAAO,GAAGqB,EACjBiD,EAAOtE,EAAO,GAAGsB,EACjBiD,EAAOvE,EAAO,GAAGsB,EAErB,IAAK,IAAIV,EAAI,EAAGA,EAAIZ,EAAOC,OAAQW,IAC9BZ,EAAOY,GAAGS,EAAI+C,IACjBA,EAAOpE,EAAOY,GAAGS,GAEdrB,EAAOY,GAAGS,EAAIgD,IACjBA,EAAOrE,EAAOY,GAAGS,GAEdrB,EAAOY,GAAGU,EAAIgD,IACjBA,EAAOtE,EAAOY,GAAGU,GAEdtB,EAAOY,GAAGU,EAAIiD,IACjBA,EAAOvE,EAAOY,GAAGU,GAInB,OAAO,IAAI,EAAA6C,UAAU,IAAI,EAAA1E,MAAM2E,EAAME,GAAO,IAAI,EAAA7E,MAAM4E,EAAMC,GAAO,IAAI,EAAA7E,MAAM4E,EAAME,GAAO,IAAI,EAAA9E,MAAM2E,EAAMG,IAG3G,iBACC,IAAIH,EAAO1E,KAAKM,OAAO,GAAGqB,EACtBgD,EAAO3E,KAAKM,OAAO,GAAGqB,EACtBiD,EAAO5E,KAAKM,OAAO,GAAGsB,EACtBiD,EAAO7E,KAAKM,OAAO,GAAGsB,EAE1B,IAAK,IAAIV,EAAI,EAAGA,EAAIlB,KAAKM,OAAOC,OAAQW,IACnClB,KAAKM,OAAOY,GAAGS,EAAI+C,IACtBA,EAAO1E,KAAKM,OAAOY,GAAGS,GAEnB3B,KAAKM,OAAOY,GAAGS,EAAIgD,IACtBA,EAAO3E,KAAKM,OAAOY,GAAGS,GAEnB3B,KAAKM,OAAOY,GAAGU,EAAIgD,IACtBA,EAAO5E,KAAKM,OAAOY,GAAGU,GAEnB5B,KAAKM,OAAOY,GAAGU,EAAIiD,IACtBA,EAAO7E,KAAKM,OAAOY,GAAGU,GAIxB,OAAO,IAAI,EAAA6C,UAAU,IAAI,EAAA1E,MAAM2E,EAAME,GAAO,IAAI,EAAA7E,MAAM4E,EAAMC,GAAO,IAAI,EAAA7E,MAAM4E,EAAME,GAAO,IAAI,EAAA9E,MAAM2E,EAAMG,KA/H5G,YAmIA,gB,kFCvIA,eACA,SAEA,MAAaJ,UAAkB,EAAA5E,QAK9B,YAAYiF,EAAS,EAAGC,EAAS,EAAGC,EAAS,EAAGC,EAAS,GACpDH,aAAa,EAAA/E,OAASgF,aAAa,EAAAhF,OAASiF,aAAa,EAAAjF,OAASkF,aAAa,EAAAlF,MAClFD,MAAM,CAACgF,EAAGC,EAAGC,EAAGC,IACNH,aAAa,EAAA/E,MACvBD,MAAM,CAACgF,EAAG,IAAI,EAAA/E,MAAM+E,EAAEnD,EAAIoD,EAAGD,EAAElD,GAAI,IAAI,EAAA7B,MAAM+E,EAAEnD,EAAIoD,EAAGD,EAAElD,EAAIoD,GAAI,IAAI,EAAAjF,MAAM+E,EAAEnD,EAAGmD,EAAElD,EAAIoD,KAErFlF,MAAM2E,EAAUS,iBAAiBJ,EAAGC,EAAGC,EAAGC,IAI5C,wBAAwBtD,EAAWC,EAAWuD,EAAeC,GAC5D,MAAO,CAAC,IAAI,EAAArF,MAAM4B,EAAGC,GAAI,IAAI,EAAA7B,MAAM4B,EAAIwD,EAAOvD,GAAI,IAAI,EAAA7B,MAAM4B,EAAIwD,EAAOvD,EAAIwD,GAAS,IAAI,EAAArF,MAAM4B,EAAGC,EAAIwD,IAGtG,iBAAiBzD,EAAWC,EAAWuD,EAAeC,GACrDpF,KAAKM,OAASmE,EAAUS,iBAAiBvD,EAAGC,EAAGuD,EAAOC,GAGvD,UAAU9E,GACT,GAAsB,IAAlBA,EAAOC,OACV,KAAM,uCAEPT,MAAMW,UAAUH,GAGjB,cAAcQ,GACb,MAAMuE,EAAKrF,KAAKkE,aACVoB,EAAKtF,KAAKmE,iBAEhB,OAAOrD,EAAMa,GAAK0D,EAAG1D,GAAKb,EAAMa,GAAK2D,EAAG3D,GAAKb,EAAMc,GAAKyD,EAAGzD,GAAKd,EAAMc,GAAK0D,EAAG1D,EAG/E,WACC,OAAOW,KAAKgD,KACXhD,KAAKiD,IAAIxF,KAAKkE,aAAavC,EAAI3B,KAAKyF,cAAc9D,EAAG,GAAKY,KAAKiD,IAAIxF,KAAKkE,aAAatC,EAAI5B,KAAKyF,cAAc7D,EAAG,IAIjH,YACC,OAAOW,KAAKgD,KACXhD,KAAKiD,IAAIxF,KAAK0F,gBAAgB/D,EAAI3B,KAAKkE,aAAavC,EAAG,GACtDY,KAAKiD,IAAIxF,KAAK0F,gBAAgB9D,EAAI5B,KAAKkE,aAAatC,EAAG,IAI1D,eACC,OAAO,EAAA7B,MAAMkE,YAAYjE,KAAKkE,aAAclE,KAAKyF,eAGlD,kBACC,OAAO,EAAA1F,MAAMkE,YAAYjE,KAAK0F,gBAAiB1F,KAAKmE,kBAGrD,gBACC,OAAO,EAAApE,MAAMkE,YAAYjE,KAAK0F,gBAAiB1F,KAAKkE,cAGrD,iBACC,OAAO,EAAAnE,MAAMkE,YAAYjE,KAAKmE,iBAAkBnE,KAAKyF,eAGtD,aACC,OAAOzF,KAAKM,OAAO,GAGpB,cACC,OAAON,KAAKM,OAAO,GAGpB,iBACC,OAAON,KAAKM,OAAO,GAGpB,gBACC,OAAON,KAAKM,OAAO,IA/ErB,e,8YCHA,YACA,YACA,YACA,YACA,a,QCJAf,EAAOD,QAAUqG,QAAQ,YCCrBC,EAA2B,G,OAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAazG,QAGrB,IAAIC,EAASqG,EAAyBE,GAAY,CAGjDxG,QAAS,IAOV,OAHA2G,EAAoBH,GAAUI,KAAK3G,EAAOD,QAASC,EAAQA,EAAOD,QAASuG,GAGpEtG,EAAOD,QClBWuG,CAAoB,M","file":"index.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@projectstorm/react-diagrams-geometry\"] = factory();\n\telse\n\t\troot[\"@projectstorm/react-diagrams-geometry\"] = factory();\n})(self, function() {\nreturn ","import { Point } from './Point';\nimport { Polygon } from './Polygon';\n\nexport enum BezierCurvepPoints {\n\tSOURCE = 0,\n\tSOURCE_CONTROL = 1,\n\tTARGET_CONTROL = 2,\n\tTARGET = 3\n}\n\nexport class BezierCurve extends Polygon {\n\tconstructor() {\n\t\tsuper([new Point(0, 0), new Point(0, 0), new Point(0, 0), new Point(0, 0)]);\n\t}\n\n\tgetSVGCurve(): string {\n\t\treturn `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow new Error('BezierCurve must have extactly 4 points');\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tgetSource(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE];\n\t}\n\n\tgetSourceControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE_CONTROL];\n\t}\n\n\tgetTargetControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET_CONTROL];\n\t}\n\n\tgetTarget(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET];\n\t}\n\n\tsetSource(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE] = point;\n\t}\n\n\tsetSourceControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\n\t}\n\n\tsetTargetControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET_CONTROL] = point;\n\t}\n\n\tsetTarget(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET] = point;\n\t}\n}\n","export class Matrix {\n\tmatrix: number[][];\n\n\tconstructor(matrix: number[][]) {\n\t\tthis.matrix = matrix;\n\t}\n\n\tmmul(matrix: Matrix): Matrix {\n\t\tthis.matrix = this.matrix.map((row, i) =>\n\t\t\tmatrix.asArray()[0].map((_, j) => row.reduce((acc, _, n) => acc + this.matrix[i][n] * matrix.asArray()[n][j], 0))\n\t\t);\n\t\treturn this;\n\t}\n\n\tasArray(): number[][] {\n\t\treturn this.matrix;\n\t}\n\n\tget(rowIndex: number, columnIndex: number): number {\n\t\treturn this.asArray()[rowIndex][columnIndex];\n\t}\n}\n","import { Matrix } from './Matrix';\n\nexport class Point {\n\tx: number;\n\ty: number;\n\n\tconstructor(x: number, y: number) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\ttranslate(x: number, y: number) {\n\t\tthis.x += x;\n\t\tthis.y += y;\n\t}\n\n\tclone() {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\ttoSVG() {\n\t\treturn this.x + ' ' + this.y;\n\t}\n\n\tasMatrix() {\n\t\treturn new Matrix([[this.x], [this.y], [1]]);\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\tlet final: Matrix = matrix.mmul(this.asMatrix());\n\t\tthis.x = final.get(0, 0);\n\t\tthis.y = final.get(1, 0);\n\t}\n\n\tpublic static middlePoint(pointA: Point, pointB: Point): Point {\n\t\treturn new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n\t}\n\n\tpublic static multiply(...matrices: Matrix[]): Matrix {\n\t\tlet m: Matrix = matrices[0];\n\t\tfor (let i = 1; i < matrices.length; i++) {\n\t\t\tm = m.mmul(matrices[i]);\n\t\t}\n\t\treturn m;\n\t}\n\n\tpublic static scaleMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[x, 0, 0],\n\t\t\t[0, y, 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static translateMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[1, 0, x],\n\t\t\t[0, 1, y],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static rotateMatrix(deg: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[Math.cos(deg), -1 * Math.sin(deg), 0],\n\t\t\t[Math.sin(deg), Math.cos(deg), 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tstatic createScaleMatrix(x, y, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tPoint.translateMatrix(origin.x, origin.y),\n\t\t\tPoint.scaleMatrix(x, y),\n\t\t\tPoint.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n\n\tstatic createRotateMatrix(deg: number, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tPoint.translateMatrix(origin.x, origin.y),\n\t\t\tPoint.rotateMatrix(deg),\n\t\t\tPoint.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n}\n","import { Point } from './Point';\nimport * as _ from 'lodash';\nimport { Matrix } from './Matrix';\n\nexport class Polygon {\n\tprotected points: Point[];\n\n\tconstructor(points: Point[] = []) {\n\t\tthis.points = points;\n\t}\n\n\tserialize() {\n\t\treturn _.map(this.points, (point) => {\n\t\t\treturn [point.x, point.y];\n\t\t});\n\t}\n\n\tdeserialize(data: any) {\n\t\tthis.points = _.map(data, (point) => {\n\t\t\treturn new Point(point[0], point[1]);\n\t\t});\n\t}\n\n\tscale(x, y, origin: Point) {\n\t\tlet matrix = Point.createScaleMatrix(x, y, origin);\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.transform(matrix);\n\t\t});\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.transform(matrix);\n\t\t});\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tthis.points = points;\n\t}\n\n\tgetPoints(): Point[] {\n\t\treturn this.points;\n\t}\n\n\trotate(degrees: number) {\n\t\tthis.transform(Point.createRotateMatrix(degrees / (180 / Math.PI), this.getOrigin()));\n\t}\n\n\ttranslate(offsetX: number, offsetY: number) {\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.translate(offsetX, offsetY);\n\t\t});\n\t}\n\n\tdoClone(ob: this) {\n\t\tthis.points = _.map(ob.points, (point) => {\n\t\t\treturn point.clone();\n\t\t});\n\t}\n\n\tclone(): this {\n\t\tlet ob = Object.create(this);\n\t\tob.doClone(this);\n\t\treturn ob;\n\t}\n\n\tgetOrigin(): Point {\n\t\tif (this.points.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tlet dimensions = this.getBoundingBox();\n\t\treturn Point.middlePoint(dimensions.getTopLeft(), dimensions.getBottomRight());\n\t}\n\n\tstatic boundingBoxFromPolygons(polygons: Polygon[]): Rectangle {\n\t\treturn Polygon.boundingBoxFromPoints(\n\t\t\t_.flatMap(polygons, (polygon) => {\n\t\t\t\treturn polygon.getPoints();\n\t\t\t})\n\t\t);\n\t}\n\n\tstatic boundingBoxFromPoints(points: Point[]): Rectangle {\n\t\tif (points.length === 0) {\n\t\t\treturn new Rectangle(0, 0, 0, 0);\n\t\t}\n\n\t\tlet minX = points[0].x;\n\t\tlet maxX = points[0].x;\n\t\tlet minY = points[0].y;\n\t\tlet maxY = points[0].y;\n\n\t\tfor (let i = 1; i < points.length; i++) {\n\t\t\tif (points[i].x < minX) {\n\t\t\t\tminX = points[i].x;\n\t\t\t}\n\t\t\tif (points[i].x > maxX) {\n\t\t\t\tmaxX = points[i].x;\n\t\t\t}\n\t\t\tif (points[i].y < minY) {\n\t\t\t\tminY = points[i].y;\n\t\t\t}\n\t\t\tif (points[i].y > maxY) {\n\t\t\t\tmaxY = points[i].y;\n\t\t\t}\n\t\t}\n\n\t\treturn new Rectangle(new Point(minX, minY), new Point(maxX, minY), new Point(maxX, maxY), new Point(minX, maxY));\n\t}\n\n\tgetBoundingBox(): Rectangle {\n\t\tlet minX = this.points[0].x;\n\t\tlet maxX = this.points[0].x;\n\t\tlet minY = this.points[0].y;\n\t\tlet maxY = this.points[0].y;\n\n\t\tfor (let i = 1; i < this.points.length; i++) {\n\t\t\tif (this.points[i].x < minX) {\n\t\t\t\tminX = this.points[i].x;\n\t\t\t}\n\t\t\tif (this.points[i].x > maxX) {\n\t\t\t\tmaxX = this.points[i].x;\n\t\t\t}\n\t\t\tif (this.points[i].y < minY) {\n\t\t\t\tminY = this.points[i].y;\n\t\t\t}\n\t\t\tif (this.points[i].y > maxY) {\n\t\t\t\tmaxY = this.points[i].y;\n\t\t\t}\n\t\t}\n\n\t\treturn new Rectangle(new Point(minX, minY), new Point(maxX, minY), new Point(maxX, maxY), new Point(minX, maxY));\n\t}\n}\n\nimport { Rectangle } from './Rectangle';\n","import { Point } from './Point';\nimport { Polygon } from './Polygon';\n\nexport class Rectangle extends Polygon {\n\tconstructor(tl: Point, tr: Point, br: Point, bl: Point);\n\tconstructor(position: Point, width: number, height: number);\n\tconstructor(x?: number, y?: number, width?: number, height?: number);\n\n\tconstructor(a: any = 0, b: any = 0, c: any = 0, d: any = 0) {\n\t\tif (a instanceof Point && b instanceof Point && c instanceof Point && d instanceof Point) {\n\t\t\tsuper([a, b, c, d]);\n\t\t} else if (a instanceof Point) {\n\t\t\tsuper([a, new Point(a.x + b, a.y), new Point(a.x + b, a.y + c), new Point(a.x, a.y + c)]);\n\t\t} else {\n\t\t\tsuper(Rectangle.pointsFromBounds(a, b, c, d));\n\t\t}\n\t}\n\n\tstatic pointsFromBounds(x: number, y: number, width: number, height: number): Point[] {\n\t\treturn [new Point(x, y), new Point(x + width, y), new Point(x + width, y + height), new Point(x, y + height)];\n\t}\n\n\tupdateDimensions(x: number, y: number, width: number, height: number) {\n\t\tthis.points = Rectangle.pointsFromBounds(x, y, width, height);\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow 'Rectangles must always have 4 points';\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tcontainsPoint(point: Point) {\n\t\tconst tl = this.getTopLeft();\n\t\tconst br = this.getBottomRight();\n\n\t\treturn point.x >= tl.x && point.x <= br.x && point.y >= tl.y && point.y <= br.y;\n\t}\n\n\tgetWidth(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getTopLeft().x - this.getTopRight().x, 2) + Math.pow(this.getTopLeft().y - this.getTopRight().y, 2)\n\t\t);\n\t}\n\n\tgetHeight(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getBottomLeft().x - this.getTopLeft().x, 2) +\n\t\t\t\tMath.pow(this.getBottomLeft().y - this.getTopLeft().y, 2)\n\t\t);\n\t}\n\n\tgetTopMiddle(): Point {\n\t\treturn Point.middlePoint(this.getTopLeft(), this.getTopRight());\n\t}\n\n\tgetBottomMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getBottomRight());\n\t}\n\n\tgetLeftMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getTopLeft());\n\t}\n\n\tgetRightMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomRight(), this.getTopRight());\n\t}\n\n\tgetTopLeft(): Point {\n\t\treturn this.points[0];\n\t}\n\n\tgetTopRight(): Point {\n\t\treturn this.points[1];\n\t}\n\n\tgetBottomRight(): Point {\n\t\treturn this.points[2];\n\t}\n\n\tgetBottomLeft(): Point {\n\t\treturn this.points[3];\n\t}\n}\n","export * from './Point';\nexport * from './Matrix';\nexport * from './Polygon';\nexport * from './Rectangle';\nexport * from './BezierCurve';\n","module.exports = require(\"lodash\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(418);\n"],"sourceRoot":""}