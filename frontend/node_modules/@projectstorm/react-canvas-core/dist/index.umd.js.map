{"version":3,"sources":["webpack://projectstorm/react-canvas-core/webpack/universalModuleDefinition","webpack://projectstorm/react-canvas-core/./src/CanvasEngine.ts","webpack://projectstorm/react-canvas-core/./src/Toolkit.ts","webpack://projectstorm/react-canvas-core/./src/actions/DeleteItemsAction.ts","webpack://projectstorm/react-canvas-core/./src/actions/ZoomCanvasAction.ts","webpack://projectstorm/react-canvas-core/./src/core-actions/Action.ts","webpack://projectstorm/react-canvas-core/./src/core-actions/ActionEventBus.ts","webpack://projectstorm/react-canvas-core/./src/core-models/BaseEntity.ts","webpack://projectstorm/react-canvas-core/./src/core-models/BaseModel.ts","webpack://projectstorm/react-canvas-core/./src/core-models/BasePositionModel.ts","webpack://projectstorm/react-canvas-core/./src/core-state/AbstractDisplacementState.ts","webpack://projectstorm/react-canvas-core/./src/core-state/State.ts","webpack://projectstorm/react-canvas-core/./src/core-state/StateMachine.ts","webpack://projectstorm/react-canvas-core/./src/core/AbstractFactory.ts","webpack://projectstorm/react-canvas-core/./src/core/AbstractModelFactory.ts","webpack://projectstorm/react-canvas-core/./src/core/AbstractReactFactory.tsx","webpack://projectstorm/react-canvas-core/./src/core/BaseObserver.ts","webpack://projectstorm/react-canvas-core/./src/core/FactoryBank.ts","webpack://projectstorm/react-canvas-core/./src/entities/canvas/CanvasModel.ts","webpack://projectstorm/react-canvas-core/./src/entities/canvas/CanvasWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/layer/LayerModel.ts","webpack://projectstorm/react-canvas-core/./src/entities/layer/SmartLayerWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/layer/TransformLayerWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/selection/SelectionBoxLayerFactory.tsx","webpack://projectstorm/react-canvas-core/./src/entities/selection/SelectionBoxWidget.tsx","webpack://projectstorm/react-canvas-core/./src/entities/selection/SelectionLayerModel.ts","webpack://projectstorm/react-canvas-core/./src/index.ts","webpack://projectstorm/react-canvas-core/./src/states/DefaultState.ts","webpack://projectstorm/react-canvas-core/./src/states/DragCanvasState.ts","webpack://projectstorm/react-canvas-core/./src/states/MoveItemsState.ts","webpack://projectstorm/react-canvas-core/./src/states/SelectingState.ts","webpack://projectstorm/react-canvas-core/./src/states/SelectionBoxState.ts","webpack://projectstorm/react-canvas-core/./src/widgets/PeformanceWidget.tsx","webpack://projectstorm/react-canvas-core/external \"@emotion/react\"","webpack://projectstorm/react-canvas-core/external \"@emotion/styled\"","webpack://projectstorm/react-canvas-core/external \"@projectstorm/geometry\"","webpack://projectstorm/react-canvas-core/external \"closest\"","webpack://projectstorm/react-canvas-core/external \"lodash\"","webpack://projectstorm/react-canvas-core/external \"react\"","webpack://projectstorm/react-canvas-core/webpack/bootstrap","webpack://projectstorm/react-canvas-core/webpack/startup"],"names":["root","factory","exports","module","define","amd","self","CanvasEngine","BaseObserver","options","super","this","model","eventBus","ActionEventBus","stateMachine","StateMachine","layerFactories","FactoryBank","registerFactoryBank","registerDefaultDeleteItemsAction","registerDefaultZoomCanvasAction","repaintDebounceMs","registerAction","ZoomCanvasAction","DeleteItemsAction","event","point","getRelativePoint","clientX","clientY","Point","x","getOffsetX","getZoomLevel","y","getOffsetY","canvasRect","canvas","getBoundingClientRect","left","top","registerListener","factoryAdded","setDiagramEngine","factoryRemoved","layer","getFactory","getType","requestAnimationFrame","repaintCanvas","promise","repaint","iterateListeners","listener","repaintFn","debounce","Promise","resolve","l","rendered","deregister","fireEvent","xFactor","clientWidth","scrollWidth","yFactor","clientHeight","scrollHeight","zoomFactor","setZoomLevel","setOffset","Toolkit","TESTING","TESTING_UID","replace","c","r","Math","random","toString","element","selector","document","body","closest","Action","keyCodes","modifiers","ctrlKey","shiftKey","altKey","metaKey","type","InputType","KEY_DOWN","fire","keyCode","indexOf","_","isEqual","forEach","engine","getModel","getSelectedEntities","isLocked","remove","MOUSE_WHEEL","actionEvent","getLayers","allowRepaint","stopPropagation","oldZoomFactor","scrollDelta","inverseZoom","deltaY","boundingRect","currentTarget","width","height","widthDiff","heightDiff","id","UID","actions","keys","action","setEngine","deregisterAction","filter","getMouseElement","getActionsForType","MOUSE_DOWN","MOUSE_UP","key","toLowerCase","KEY_UP","MOUSE_MOVE","getActionsForEvent","BaseEntity","lookupTable","clone","cloneDeep","clearListeners","doClone","listeners","data","locked","k","entity","BaseModel","parent","CanvasModel","getParentCanvasModel","serialize","selected","extras","deserialize","isSelected","BasePositionModel","position","Rectangle","AbstractDisplacementState","State","initialX","initialY","rel","initialXRelative","initialYRelative","buttons","fireMouseMoved","displacementX","displacementY","virtualDisplacementX","virtualDisplacementY","eject","childStates","getStateMachine","popState","state","pushState","getActionEventBus","fireAction","push","length","isKeysFullfilled","findStateToActivate","child","intersection","previous","getKeys","tryActivateParentState","tryActivateChildState","handler1","handler2","next","stateStack","currentState","setState","pop","last","deactivated","old","activated","newState","bank","AbstractModelFactory","AbstractFactory","AbstractReactFactory","firing","fireEventInternal","function","cb","handle","getListenerHandle","factories","values","deregisterFactory","Error","setFactoryBank","zoom","gridSize","offsetX","offsetY","layers","flatMap","getSelectionEntities","ob","setSelected","getModels","setParent","entityRemoved","index","splice","size","pos","floor","models","promises","resolvers","registerModel","getID","layerOb","getFactoryForLayer","generateModel","initialConfig","addLayer","map","S","Canvas","div","CanvasWidget","React","Component","props","ref","createRef","diagramEngineListener","deregisterListener","canvasListener","setCanvas","removeEventListener","keyUp","keyDown","current","list","registerCanvas","forceUpdate","addEventListener","className","onWheel","onMouseDown","onMouseUp","onMouseMove","TransformLayerWidget","SmartLayerWidget","LayerModel","repaintEnabled","isSvg","transformed","modelOb","getChildModelFactoryBank","addModel","mapValues","allow","removeLayer","_id","isRepaintEnabled","generateReactWidget","shared","css","DivLayer","SvgLayer","svg","getParent","getOptions","transform","getTransform","style","getTransformStyle","children","SelectionBoxLayerFactory","SelectionLayerModel","SelectionBoxWidget","rect","box","Container","DefaultState","name","SelectingState","getModelForEvent","transitionWithEvent","MoveItemsState","DragCanvasState","config","allowDrag","prev","clearSelection","initialCanvasX","initialCanvasY","initialPositions","items","item","getPosition","setPosition","getGridPosition","SelectionBoxState","abs","right","bottom","setBox","getBoxDimensions","relative","getRelativeMousePoint","getBoundingBox","bounds","containsPoint","getTopLeft","getBottomRight","PeformanceWidget","nextProps","nextState","nextContext","performanceTune","serialized","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"mappings":"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","file":"index.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"projectstorm/react-canvas-core\"] = factory();\n\telse\n\t\troot[\"projectstorm/react-canvas-core\"] = factory();\n})(self, function() {\nreturn ","import { debounce } from 'lodash';\nimport { CanvasModel } from './entities/canvas/CanvasModel';\nimport { FactoryBank } from './core/FactoryBank';\nimport { AbstractReactFactory } from './core/AbstractReactFactory';\nimport { LayerModel } from './entities/layer/LayerModel';\nimport { BaseListener, BaseObserver } from './core/BaseObserver';\nimport { MouseEvent } from 'react';\nimport { BaseModel } from './core-models/BaseModel';\nimport { Point } from '@projectstorm/geometry';\nimport { ActionEventBus } from './core-actions/ActionEventBus';\nimport { ZoomCanvasAction } from './actions/ZoomCanvasAction';\nimport { DeleteItemsAction } from './actions/DeleteItemsAction';\nimport { StateMachine } from './core-state/StateMachine';\n\nexport interface CanvasEngineListener extends BaseListener {\n\tcanvasReady?(): void;\n\n\trepaintCanvas?(): void;\n\n\trendered?(): void;\n}\n\n/**\n * Defines the CanvasEngine options\n */\nexport interface CanvasEngineOptions {\n\tregisterDefaultDeleteItemsAction?: boolean;\n\tregisterDefaultZoomCanvasAction?: boolean;\n\t/**\n\t * Defines the debounce wait time in milliseconds if > 0\n\t */\n\trepaintDebounceMs?: number;\n}\n\nexport class CanvasEngine<\n\tL extends CanvasEngineListener = CanvasEngineListener,\n\tM extends CanvasModel = CanvasModel\n> extends BaseObserver<L> {\n\tprotected model: M;\n\tprotected layerFactories: FactoryBank<AbstractReactFactory<LayerModel>>;\n\tprotected canvas: HTMLDivElement;\n\tprotected eventBus: ActionEventBus;\n\tprotected stateMachine: StateMachine;\n\tprotected options: CanvasEngineOptions;\n\n\tconstructor(options: CanvasEngineOptions = {}) {\n\t\tsuper();\n\t\tthis.model = null;\n\t\tthis.eventBus = new ActionEventBus(this);\n\t\tthis.stateMachine = new StateMachine(this);\n\t\tthis.layerFactories = new FactoryBank();\n\t\tthis.registerFactoryBank(this.layerFactories);\n\n\t\t/**\n\t\t * Overrides the standard options with the possible given options\n\t\t */\n\t\tthis.options = {\n\t\t\tregisterDefaultDeleteItemsAction: true,\n\t\t\tregisterDefaultZoomCanvasAction: true,\n\t\t\trepaintDebounceMs: 0,\n\t\t\t...options\n\t\t};\n\t\tif (this.options.registerDefaultZoomCanvasAction === true) {\n\t\t\tthis.eventBus.registerAction(new ZoomCanvasAction());\n\t\t}\n\t\tif (this.options.registerDefaultDeleteItemsAction === true) {\n\t\t\tthis.eventBus.registerAction(new DeleteItemsAction());\n\t\t}\n\t}\n\n\tgetStateMachine() {\n\t\treturn this.stateMachine;\n\t}\n\n\tgetRelativeMousePoint(event: { clientX: number; clientY: number }): Point {\n\t\tconst point = this.getRelativePoint(event.clientX, event.clientY);\n\t\treturn new Point(\n\t\t\t(point.x - this.model.getOffsetX()) / (this.model.getZoomLevel() / 100.0),\n\t\t\t(point.y - this.model.getOffsetY()) / (this.model.getZoomLevel() / 100.0)\n\t\t);\n\t}\n\n\tgetRelativePoint(x, y): Point {\n\t\tconst canvasRect = this.canvas.getBoundingClientRect();\n\t\treturn new Point(x - canvasRect.left, y - canvasRect.top);\n\t}\n\n\tregisterFactoryBank(factory: FactoryBank) {\n\t\tfactory.registerListener({\n\t\t\tfactoryAdded: (event) => {\n\t\t\t\tevent.factory.setDiagramEngine(this);\n\t\t\t},\n\t\t\tfactoryRemoved: (event) => {\n\t\t\t\tevent.factory.setDiagramEngine(null);\n\t\t\t}\n\t\t});\n\t}\n\n\tgetActionEventBus() {\n\t\treturn this.eventBus;\n\t}\n\n\tgetLayerFactories() {\n\t\treturn this.layerFactories;\n\t}\n\n\tgetFactoryForLayer<F extends AbstractReactFactory<LayerModel>>(layer: LayerModel | string) {\n\t\tif (typeof layer === 'string') {\n\t\t\treturn this.layerFactories.getFactory(layer);\n\t\t}\n\t\treturn this.layerFactories.getFactory(layer.getType());\n\t}\n\n\tsetModel(model: M) {\n\t\tthis.model = model;\n\t\tif (this.canvas) {\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tthis.repaintCanvas();\n\t\t\t});\n\t\t}\n\t}\n\n\tgetModel(): M {\n\t\treturn this.model;\n\t}\n\n\trepaintCanvas(promise: true): Promise<any>;\n\trepaintCanvas(): void;\n\trepaintCanvas(promise?): Promise<any> | void {\n\t\tconst { repaintDebounceMs } = this.options;\n\n\t\t/**\n\t\t * The actual repaint function\n\t\t */\n\t\tconst repaint = () => {\n\t\t\tthis.iterateListeners((listener) => {\n\t\t\t\tif (listener.repaintCanvas) {\n\t\t\t\t\tlistener.repaintCanvas();\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// if the `repaintDebounceMs` option is > 0, then apply the debounce\n\t\tlet repaintFn = repaint;\n\n\t\tif (repaintDebounceMs > 0) {\n\t\t\trepaintFn = debounce(repaint, repaintDebounceMs);\n\t\t}\n\n\t\tif (promise) {\n\t\t\treturn new Promise<void>((resolve) => {\n\t\t\t\tconst l = this.registerListener({\n\t\t\t\t\trendered: () => {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\tl.deregister();\n\t\t\t\t\t}\n\t\t\t\t} as L);\n\t\t\t\trepaintFn();\n\t\t\t});\n\t\t}\n\n\t\trepaintFn();\n\t}\n\n\tsetCanvas(canvas?: HTMLDivElement) {\n\t\tif (this.canvas !== canvas) {\n\t\t\tthis.canvas = canvas;\n\t\t\tif (canvas) {\n\t\t\t\tthis.fireEvent({}, 'canvasReady');\n\t\t\t}\n\t\t}\n\t}\n\n\tgetCanvas() {\n\t\treturn this.canvas;\n\t}\n\n\tgetMouseElement(event: MouseEvent): BaseModel {\n\t\treturn null;\n\t}\n\n\tzoomToFit() {\n\t\tconst xFactor = this.canvas.clientWidth / this.canvas.scrollWidth;\n\t\tconst yFactor = this.canvas.clientHeight / this.canvas.scrollHeight;\n\t\tconst zoomFactor = xFactor < yFactor ? xFactor : yFactor;\n\n\t\tthis.model.setZoomLevel(this.model.getZoomLevel() * zoomFactor);\n\t\tthis.model.setOffset(0, 0);\n\t\tthis.repaintCanvas();\n\t}\n}\n","import * as closest from 'closest';\n\nexport class Toolkit {\n\tstatic TESTING: boolean = false;\n\tstatic TESTING_UID = 0;\n\n\t/**\n\t * Generats a unique ID (thanks Stack overflow :3)\n\t * @returns {String}\n\t */\n\tpublic static UID(): string {\n\t\tif (Toolkit.TESTING) {\n\t\t\tToolkit.TESTING_UID++;\n\t\t\treturn `${Toolkit.TESTING_UID}`;\n\t\t}\n\t\treturn 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n\t\t\tconst r = (Math.random() * 16) | 0;\n\t\t\tconst v = c === 'x' ? r : (r & 0x3) | 0x8;\n\t\t\treturn v.toString(16);\n\t\t});\n\t}\n\n\t/**\n\t * Finds the closest element as a polyfill\n\t */\n\tpublic static closest(element: Element, selector: string) {\n\t\tif (document.body.closest) {\n\t\t\treturn element.closest(selector);\n\t\t}\n\t\treturn closest(element, selector);\n\t}\n}\n","import { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { KeyboardEvent } from 'react';\nimport * as _ from 'lodash';\n\nexport interface DeleteItemsActionOptions {\n\tkeyCodes?: number[];\n\tmodifiers?: {\n\t\tctrlKey?: boolean;\n\t\tshiftKey?: boolean;\n\t\taltKey?: boolean;\n\t\tmetaKey?: boolean;\n\t};\n}\n\n/**\n * Deletes all selected items\n */\nexport class DeleteItemsAction extends Action {\n\tconstructor(options: DeleteItemsActionOptions = {}) {\n\t\tconst keyCodes = options.keyCodes || [46, 8];\n\t\tconst modifiers = {\n\t\t\tctrlKey: false,\n\t\t\tshiftKey: false,\n\t\t\taltKey: false,\n\t\t\tmetaKey: false,\n\t\t\t...options.modifiers\n\t\t};\n\n\t\tsuper({\n\t\t\ttype: InputType.KEY_DOWN,\n\t\t\tfire: (event: ActionEvent<KeyboardEvent>) => {\n\t\t\t\tconst { keyCode, ctrlKey, shiftKey, altKey, metaKey } = event.event;\n\n\t\t\t\tif (keyCodes.indexOf(keyCode) !== -1 && _.isEqual({ ctrlKey, shiftKey, altKey, metaKey }, modifiers)) {\n\t\t\t\t\t_.forEach(this.engine.getModel().getSelectedEntities(), (model) => {\n\t\t\t\t\t\t// only delete items which are not locked\n\t\t\t\t\t\tif (!model.isLocked()) {\n\t\t\t\t\t\t\tmodel.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { WheelEvent } from 'react';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\n\nexport interface ZoomCanvasActionOptions {\n\tinverseZoom?: boolean;\n}\n\nexport class ZoomCanvasAction extends Action {\n\tconstructor(options: ZoomCanvasActionOptions = {}) {\n\t\tsuper({\n\t\t\ttype: InputType.MOUSE_WHEEL,\n\t\t\tfire: (actionEvent: ActionEvent<WheelEvent>) => {\n\t\t\t\tconst { event } = actionEvent;\n\t\t\t\t// we can block layer rendering because we are only targeting the transforms\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(false);\n\t\t\t\t}\n\n\t\t\t\tconst model = this.engine.getModel();\n\t\t\t\tevent.stopPropagation();\n\t\t\t\tconst oldZoomFactor = this.engine.getModel().getZoomLevel() / 100;\n\t\t\t\tlet scrollDelta = options.inverseZoom ? -event.deltaY : event.deltaY;\n\t\t\t\t//check if it is pinch gesture\n\t\t\t\tif (event.ctrlKey && scrollDelta % 1 !== 0) {\n\t\t\t\t\t/*\n\t\t\t\t\t\tChrome and Firefox sends wheel event with deltaY that\n\t\t\t\t\t\thave fractional part, also `ctrlKey` prop of the event is true\n\t\t\t\t\t\tthough ctrl isn't pressed\n\t\t\t\t\t*/\n\t\t\t\t\tscrollDelta /= 3;\n\t\t\t\t} else {\n\t\t\t\t\tscrollDelta /= 60;\n\t\t\t\t}\n\t\t\t\tif (model.getZoomLevel() + scrollDelta > 10) {\n\t\t\t\t\tmodel.setZoomLevel(model.getZoomLevel() + scrollDelta);\n\t\t\t\t}\n\n\t\t\t\tconst zoomFactor = model.getZoomLevel() / 100;\n\n\t\t\t\tconst boundingRect = event.currentTarget.getBoundingClientRect();\n\t\t\t\tconst clientWidth = boundingRect.width;\n\t\t\t\tconst clientHeight = boundingRect.height;\n\t\t\t\t// compute difference between rect before and after scroll\n\t\t\t\tconst widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\n\t\t\t\tconst heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\n\t\t\t\t// compute mouse coords relative to canvas\n\t\t\t\tconst clientX = event.clientX - boundingRect.left;\n\t\t\t\tconst clientY = event.clientY - boundingRect.top;\n\n\t\t\t\t// compute width and height increment factor\n\t\t\t\tconst xFactor = (clientX - model.getOffsetX()) / oldZoomFactor / clientWidth;\n\t\t\t\tconst yFactor = (clientY - model.getOffsetY()) / oldZoomFactor / clientHeight;\n\n\t\t\t\tmodel.setOffset(model.getOffsetX() - widthDiff * xFactor, model.getOffsetY() - heightDiff * yFactor);\n\t\t\t\tthis.engine.repaintCanvas();\n\n\t\t\t\t// re-enable rendering\n\t\t\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\t\t\tlayer.allowRepaint(true);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n}\n","import { MouseEvent, KeyboardEvent, WheelEvent, SyntheticEvent } from 'react';\nimport { Toolkit } from '../Toolkit';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport enum InputType {\n\tMOUSE_DOWN = 'mouse-down',\n\tMOUSE_UP = 'mouse-up',\n\tMOUSE_MOVE = 'mouse-move',\n\tMOUSE_WHEEL = 'mouse-wheel',\n\tKEY_DOWN = 'key-down',\n\tKEY_UP = 'key-up'\n}\n\nexport interface Mapping {\n\t[InputType.MOUSE_DOWN]: MouseEvent;\n\t[InputType.MOUSE_UP]: MouseEvent;\n\t[InputType.MOUSE_MOVE]: MouseEvent;\n\t[InputType.MOUSE_WHEEL]: WheelEvent;\n\t[InputType.KEY_DOWN]: KeyboardEvent;\n\t[InputType.KEY_UP]: KeyboardEvent;\n}\n\nexport interface ActionEvent<Event extends SyntheticEvent = SyntheticEvent, Model extends BaseModel = BaseModel> {\n\tevent: Event;\n\tmodel?: Model;\n}\n\nexport interface ActionOptions {\n\ttype: InputType;\n\tfire: (event: ActionEvent<Mapping[this['type']]>) => void;\n}\n\nexport class Action<T extends CanvasEngine = CanvasEngine> {\n\toptions: ActionOptions;\n\tid: string;\n\tengine: T;\n\n\tconstructor(options: ActionOptions) {\n\t\tthis.options = options;\n\t\tthis.id = Toolkit.UID();\n\t}\n\n\tsetEngine(engine: T) {\n\t\tthis.engine = engine;\n\t}\n}\n","import { Action, ActionEvent, InputType } from './Action';\nimport { KeyboardEvent, MouseEvent } from 'react';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport class ActionEventBus {\n\tprotected actions: { [id: string]: Action };\n\tprotected engine: CanvasEngine;\n\tprotected keys: { [key: string]: boolean };\n\n\tconstructor(engine: CanvasEngine) {\n\t\tthis.actions = {};\n\t\tthis.engine = engine;\n\t\tthis.keys = {};\n\t}\n\n\tgetKeys(): string[] {\n\t\treturn _.keys(this.keys);\n\t}\n\n\tregisterAction(action: Action): () => void {\n\t\taction.setEngine(this.engine);\n\t\tthis.actions[action.id] = action;\n\t\treturn () => {\n\t\t\tthis.deregisterAction(action);\n\t\t};\n\t}\n\n\tderegisterAction(action: Action) {\n\t\taction.setEngine(null);\n\t\tdelete this.actions[action.id];\n\t}\n\n\tgetActionsForType(type: InputType): Action[] {\n\t\treturn _.filter(this.actions, (action) => {\n\t\t\treturn action.options.type === type;\n\t\t});\n\t}\n\n\tgetModelForEvent(actionEvent: ActionEvent<MouseEvent>): BaseModel {\n\t\tif (actionEvent.model) {\n\t\t\treturn actionEvent.model;\n\t\t}\n\t\treturn this.engine.getMouseElement(actionEvent.event);\n\t}\n\n\tgetActionsForEvent(actionEvent: ActionEvent): Action[] {\n\t\tconst { event } = actionEvent;\n\t\tif (event.type === 'mousedown') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_DOWN);\n\t\t} else if (event.type === 'mouseup') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_UP);\n\t\t} else if (event.type === 'keydown') {\n\t\t\t// store the recorded key\n\t\t\tthis.keys[(event as KeyboardEvent).key.toLowerCase()] = true;\n\t\t\treturn this.getActionsForType(InputType.KEY_DOWN);\n\t\t} else if (event.type === 'keyup') {\n\t\t\t// delete the recorded key\n\t\t\tdelete this.keys[(event as KeyboardEvent).key.toLowerCase()];\n\t\t\treturn this.getActionsForType(InputType.KEY_UP);\n\t\t} else if (event.type === 'mousemove') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_MOVE);\n\t\t} else if (event.type === 'wheel') {\n\t\t\treturn this.getActionsForType(InputType.MOUSE_WHEEL);\n\t\t}\n\t\treturn [];\n\t}\n\n\tfireAction(actionEvent: ActionEvent) {\n\t\tconst actions = this.getActionsForEvent(actionEvent);\n\t\tfor (let action of actions) {\n\t\t\taction.options.fire(actionEvent as any);\n\t\t}\n\t}\n}\n","import { Toolkit } from '../Toolkit';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseEvent, BaseListener, BaseObserver } from '../core/BaseObserver';\nimport { AbstractModelFactory } from '../core/AbstractModelFactory';\nimport { BaseModel } from './BaseModel';\n\nexport interface BaseEntityEvent<T extends BaseEntity = BaseEntity> extends BaseEvent {\n\tentity: T;\n}\n\nexport interface BaseEntityListener<T extends BaseEntity = BaseEntity> extends BaseListener {\n\tlockChanged?(event: BaseEntityEvent<T> & { locked: boolean }): void;\n}\n\nexport type BaseEntityType = 'node' | 'link' | 'port' | 'point';\n\nexport interface BaseEntityOptions {\n\tid?: string;\n\tlocked?: boolean;\n}\n\nexport type BaseEntityGenerics = {\n\tLISTENER: BaseEntityListener;\n\tOPTIONS: BaseEntityOptions;\n};\n\nexport interface DeserializeEvent<T extends BaseEntity = BaseEntity> {\n\tengine: CanvasEngine;\n\tdata: ReturnType<T['serialize']>;\n\tregisterModel(model: BaseModel);\n\tgetModel<T extends BaseModel>(id: string): Promise<T>;\n}\n\nexport class BaseEntity<T extends BaseEntityGenerics = BaseEntityGenerics> extends BaseObserver<T['LISTENER']> {\n\tprotected options: T['OPTIONS'];\n\n\tconstructor(options: T['OPTIONS'] = {}) {\n\t\tsuper();\n\t\tthis.options = {\n\t\t\tid: Toolkit.UID(),\n\t\t\t...options\n\t\t};\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\tgetID() {\n\t\treturn this.options.id;\n\t}\n\n\tdoClone(lookupTable: { [s: string]: any } = {}, clone: any) {\n\t\t/*noop*/\n\t}\n\n\tclone(lookupTable: { [s: string]: any } = {}) {\n\t\t// try and use an existing clone first\n\t\tif (lookupTable[this.options.id]) {\n\t\t\treturn lookupTable[this.options.id];\n\t\t}\n\t\tlet clone = _.cloneDeep(this);\n\t\tclone.options = {\n\t\t\t...this.options,\n\t\t\tid: Toolkit.UID()\n\t\t};\n\t\tclone.clearListeners();\n\t\tlookupTable[this.options.id] = clone;\n\n\t\tthis.doClone(lookupTable, clone);\n\t\treturn clone;\n\t}\n\n\tclearListeners() {\n\t\tthis.listeners = {};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tthis.options.id = event.data.id;\n\t\tthis.options.locked = event.data.locked;\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\tid: this.options.id,\n\t\t\tlocked: this.options.locked\n\t\t};\n\t}\n\n\tfireEvent<L extends Partial<BaseEntityEvent> & object>(event: L, k: keyof T['LISTENER']) {\n\t\tsuper.fireEvent(\n\t\t\t{\n\t\t\t\tentity: this,\n\t\t\t\t...event\n\t\t\t},\n\t\t\tk\n\t\t);\n\t}\n\n\tpublic isLocked(): boolean {\n\t\treturn this.options.locked;\n\t}\n\n\tpublic setLocked(locked: boolean = true) {\n\t\tthis.options.locked = locked;\n\t\tthis.fireEvent(\n\t\t\t{\n\t\t\t\tlocked: locked\n\t\t\t},\n\t\t\t'lockChanged'\n\t\t);\n\t}\n}\n","import {\n\tBaseEntity,\n\tBaseEntityEvent,\n\tBaseEntityGenerics,\n\tBaseEntityListener,\n\tBaseEntityOptions,\n\tDeserializeEvent\n} from './BaseEntity';\nimport { CanvasModel } from '../entities/canvas/CanvasModel';\n\nexport interface BaseModelListener extends BaseEntityListener {\n\tselectionChanged?(event: BaseEntityEvent<BaseModel> & { isSelected: boolean }): void;\n\n\tentityRemoved?(event: BaseEntityEvent<BaseModel>): void;\n}\n\nexport interface BaseModelOptions extends BaseEntityOptions {\n\ttype?: string;\n\tselected?: boolean;\n\textras?: any;\n}\n\nexport interface BaseModelGenerics extends BaseEntityGenerics {\n\tLISTENER: BaseModelListener;\n\tPARENT: BaseEntity;\n\tOPTIONS: BaseModelOptions;\n}\n\nexport class BaseModel<G extends BaseModelGenerics = BaseModelGenerics> extends BaseEntity<G> {\n\tprotected parent: G['PARENT'];\n\n\tconstructor(options: G['OPTIONS']) {\n\t\tsuper(options);\n\t}\n\n\tperformanceTune() {\n\t\treturn true;\n\t}\n\n\tgetParentCanvasModel(): CanvasModel {\n\t\tif (!this.parent) {\n\t\t\treturn null;\n\t\t}\n\t\tif (this.parent instanceof CanvasModel) {\n\t\t\treturn this.parent;\n\t\t} else if (this.parent instanceof BaseModel) {\n\t\t\treturn this.parent.getParentCanvasModel();\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetParent(): G['PARENT'] {\n\t\treturn this.parent;\n\t}\n\n\tsetParent(parent: G['PARENT']) {\n\t\tthis.parent = parent;\n\t}\n\n\tgetSelectionEntities(): Array<BaseModel> {\n\t\treturn [this];\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\ttype: this.options.type,\n\t\t\tselected: this.options.selected,\n\t\t\textras: this.options.extras\n\t\t};\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.extras = event.data.extras;\n\t\tthis.options.selected = event.data.selected;\n\t}\n\n\tgetType(): string {\n\t\treturn this.options.type;\n\t}\n\n\tisSelected(): boolean {\n\t\treturn this.options.selected;\n\t}\n\n\tisLocked(): boolean {\n\t\tconst locked = super.isLocked();\n\t\tif (locked) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// delegate this call up to the parent\n\t\tif (this.parent) {\n\t\t\treturn this.parent.isLocked();\n\t\t}\n\t\treturn false;\n\t}\n\n\tsetSelected(selected: boolean = true) {\n\t\tif (this.options.selected !== selected) {\n\t\t\tthis.options.selected = selected;\n\n\t\t\tthis.fireEvent(\n\t\t\t\t{\n\t\t\t\t\tisSelected: selected\n\t\t\t\t},\n\t\t\t\t'selectionChanged'\n\t\t\t);\n\t\t}\n\t}\n\n\tremove() {\n\t\tthis.fireEvent({}, 'entityRemoved');\n\t}\n}\n","import { BaseModel, BaseModelGenerics, BaseModelListener, BaseModelOptions } from './BaseModel';\nimport { BaseEntityEvent, DeserializeEvent } from './BaseEntity';\nimport { Point, Rectangle } from '@projectstorm/geometry';\nimport { ModelGeometryInterface } from '../core/ModelGeometryInterface';\n\nexport interface BasePositionModelListener extends BaseModelListener {\n\tpositionChanged?(event: BaseEntityEvent<BasePositionModel>): void;\n}\n\nexport interface BasePositionModelOptions extends BaseModelOptions {\n\tposition?: Point;\n}\n\nexport interface BasePositionModelGenerics extends BaseModelGenerics {\n\tLISTENER: BasePositionModelListener;\n\tOPTIONS: BasePositionModelOptions;\n}\n\nexport class BasePositionModel<G extends BasePositionModelGenerics = BasePositionModelGenerics>\n\textends BaseModel<G>\n\timplements ModelGeometryInterface {\n\tprotected position: Point;\n\n\tconstructor(options: G['OPTIONS']) {\n\t\tsuper(options);\n\t\tthis.position = options.position || new Point(0, 0);\n\t}\n\n\tsetPosition(point: Point);\n\tsetPosition(x: number, y: number);\n\tsetPosition(x, y?) {\n\t\tif (typeof x === 'object') {\n\t\t\tthis.position = x;\n\t\t} else if (typeof x) {\n\t\t\tthis.position = new Point(x, y);\n\t\t}\n\t\tthis.fireEvent({}, 'positionChanged');\n\t}\n\n\tgetBoundingBox(): Rectangle {\n\t\treturn new Rectangle(this.position, 0, 0);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.position = new Point(event.data.x, event.data.y);\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tx: this.position.x,\n\t\t\ty: this.position.y\n\t\t};\n\t}\n\n\tgetPosition(): Point {\n\t\treturn this.position;\n\t}\n\n\tgetX() {\n\t\treturn this.position.x;\n\t}\n\n\tgetY() {\n\t\treturn this.position.y;\n\t}\n}\n","import { State, StateOptions } from './State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface AbstractDisplacementStateEvent {\n\tdisplacementX: number;\n\tdisplacementY: number;\n\tvirtualDisplacementX: number;\n\tvirtualDisplacementY: number;\n\tevent: React.MouseEvent;\n}\n\nexport abstract class AbstractDisplacementState<E extends CanvasEngine = CanvasEngine> extends State<E> {\n\tinitialX: number;\n\tinitialY: number;\n\tinitialXRelative: number;\n\tinitialYRelative: number;\n\n\tconstructor(options: StateOptions) {\n\t\tsuper(options);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tthis.initialX = actionEvent.event.clientX;\n\t\t\t\t\tthis.initialY = actionEvent.event.clientY;\n\t\t\t\t\tconst rel = this.engine.getRelativePoint(actionEvent.event.clientX, actionEvent.event.clientY);\n\t\t\t\t\tthis.initialXRelative = rel.x;\n\t\t\t\t\tthis.initialYRelative = rel.y;\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_MOVE,\n\t\t\t\tfire: (actionEvent: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst { event } = actionEvent;\n\n\t\t\t\t\tif (event.buttons === 0) {\n\t\t\t\t\t\t// If buttons is 0, it means the mouse is not down, the user may have released it\n\t\t\t\t\t\t// outside of the canvas, then we eject the state\n\t\t\t\t\t\tthis.eject();\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.fireMouseMoved({\n\t\t\t\t\t\tdisplacementX: event.clientX - this.initialX,\n\t\t\t\t\t\tdisplacementY: event.clientY - this.initialY,\n\t\t\t\t\t\tvirtualDisplacementX: (event.clientX - this.initialX) / (this.engine.getModel().getZoomLevel() / 100.0),\n\t\t\t\t\t\tvirtualDisplacementY: (event.clientY - this.initialY) / (this.engine.getModel().getZoomLevel() / 100.0),\n\t\t\t\t\t\tevent: event\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_UP,\n\t\t\t\tfire: (event: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\t// when the mouse if up, we eject this state\n\t\t\t\t\tthis.eject();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tabstract fireMouseMoved(event: AbstractDisplacementStateEvent);\n}\n","import { CanvasEngine } from '../CanvasEngine';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { SyntheticEvent } from 'react';\nimport * as _ from 'lodash';\n\nexport interface StateOptions {\n\tname: string;\n}\n\nexport abstract class State<E extends CanvasEngine = CanvasEngine> {\n\tprotected engine: E;\n\tprotected actions: Action[];\n\tprotected keys: string[];\n\tprotected options: StateOptions;\n\tprotected childStates: State[];\n\n\tprivate handler1;\n\tprivate handler2;\n\n\tconstructor(options: StateOptions) {\n\t\tthis.actions = [];\n\t\tthis.keys = [];\n\t\tthis.childStates = [];\n\t\tthis.options = options;\n\t}\n\n\tsetEngine(engine: E) {\n\t\tthis.engine = engine;\n\t}\n\n\tgetOptions() {\n\t\treturn this.options;\n\t}\n\n\teject() {\n\t\tthis.engine.getStateMachine().popState();\n\t}\n\n\ttransitionWithEvent(state: State, event: ActionEvent<SyntheticEvent>) {\n\t\tthis.engine.getStateMachine().pushState(state);\n\t\tthis.engine.getActionEventBus().fireAction(event);\n\t}\n\n\tregisterAction(action: Action) {\n\t\tthis.actions.push(action);\n\t}\n\n\ttryActivateParentState(keys: string[]) {\n\t\tif (this.keys.length > 0 && !this.isKeysFullfilled(keys)) {\n\t\t\tthis.eject();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\ttryActivateChildState(keys: string[]) {\n\t\tconst state = this.findStateToActivate(keys);\n\t\tif (state) {\n\t\t\tthis.engine.getStateMachine().pushState(state);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfindStateToActivate(keys: string[]) {\n\t\tfor (let child of this.childStates) {\n\t\t\tif (child.isKeysFullfilled(keys)) {\n\t\t\t\treturn child;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tisKeysFullfilled(keys: string[]) {\n\t\treturn _.intersection(this.keys, keys).length === this.keys.length;\n\t}\n\n\tactivated(previous: State) {\n\t\tconst keys = this.engine.getActionEventBus().getKeys();\n\n\t\tif (this.tryActivateParentState(keys) || this.tryActivateChildState(keys)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// perhaps we need to pop again?\n\t\tthis.handler1 = this.engine.getActionEventBus().registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_DOWN,\n\t\t\t\tfire: () => {\n\t\t\t\t\tthis.tryActivateChildState(this.engine.getActionEventBus().getKeys());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis.handler2 = this.engine.getActionEventBus().registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.KEY_UP,\n\t\t\t\tfire: () => {\n\t\t\t\t\tthis.tryActivateParentState(this.engine.getActionEventBus().getKeys());\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tfor (let action of this.actions) {\n\t\t\tthis.engine.getActionEventBus().registerAction(action);\n\t\t}\n\t}\n\n\tdeactivated(next: State) {\n\t\tif (this.handler1) {\n\t\t\tthis.handler1();\n\t\t}\n\t\tif (this.handler2) {\n\t\t\tthis.handler2();\n\t\t}\n\t\t// if this happens, we are going into heirachial state machine mode\n\t\tfor (let action of this.actions) {\n\t\t\tthis.engine.getActionEventBus().deregisterAction(action);\n\t\t}\n\t}\n}\n","import { State } from './State';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../CanvasEngine';\nimport { BaseEvent, BaseListener, BaseObserver } from '../core/BaseObserver';\n\nexport interface StateMachineListener extends BaseListener {\n\tstateChanged?: (event: BaseEvent & { newState: State }) => any;\n}\n\nexport class StateMachine extends BaseObserver<StateMachineListener> {\n\tprotected currentState: State;\n\tprotected stateStack: State[];\n\tprotected engine: CanvasEngine;\n\n\tconstructor(engine: CanvasEngine) {\n\t\tsuper();\n\t\tthis.engine = engine;\n\t\tthis.stateStack = [];\n\t}\n\n\tgetCurrentState() {\n\t\treturn this.currentState;\n\t}\n\n\tpushState(state: State) {\n\t\tthis.stateStack.push(state);\n\t\tthis.setState(state);\n\t}\n\n\tpopState() {\n\t\tthis.stateStack.pop();\n\t\tthis.setState(_.last(this.stateStack));\n\t}\n\n\tsetState(state: State) {\n\t\tstate.setEngine(this.engine);\n\n\t\t// if no state object, get the initial state\n\t\tif (this.currentState) {\n\t\t\tthis.currentState.deactivated(state);\n\t\t}\n\t\tconst old = this.currentState;\n\t\tthis.currentState = state;\n\t\tif (this.currentState) {\n\t\t\tthis.currentState.activated(old);\n\t\t\tthis.fireEvent<'stateChanged'>(\n\t\t\t\t{\n\t\t\t\t\tnewState: state\n\t\t\t\t},\n\t\t\t\t'stateChanged'\n\t\t\t);\n\t\t}\n\t}\n}\n","import { CanvasEngine } from '../CanvasEngine';\nimport { FactoryBank } from './FactoryBank';\n\n/**\n * Base factory for all the different types of entities.\n * Gets registered with the engine, and is used to generate models\n */\nexport abstract class AbstractFactory<E extends CanvasEngine = CanvasEngine> {\n\t/**\n\t * Couples the factory with the models it generates\n\t */\n\tprotected type: string;\n\t/**\n\t * The engine gets injected when the factory is registered\n\t */\n\tprotected engine: E;\n\tprotected bank: FactoryBank;\n\n\tconstructor(type: string) {\n\t\tthis.type = type;\n\t}\n\n\tsetDiagramEngine(engine: E) {\n\t\tthis.engine = engine;\n\t}\n\n\tsetFactoryBank(bank: FactoryBank) {\n\t\tthis.bank = bank;\n\t}\n\n\tgetType(): string {\n\t\treturn this.type;\n\t}\n}\n","import { AbstractFactory } from './AbstractFactory';\nimport { BaseModel } from '../core-models/BaseModel';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface GenerateModelEvent {\n\tinitialConfig?: any;\n}\n\nexport abstract class AbstractModelFactory<\n\tT extends BaseModel = BaseModel,\n\tE extends CanvasEngine = CanvasEngine\n> extends AbstractFactory<E> {\n\t/**\n\t * Generates new models (the core factory pattern)\n\t */\n\tabstract generateModel(event: GenerateModelEvent): T;\n}\n","import { BaseModel } from '../core-models/BaseModel';\nimport { AbstractModelFactory } from './AbstractModelFactory';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport interface GenerateWidgetEvent<T extends BaseModel> {\n\tmodel: T;\n}\n\n/**\n * Further extends the AbstractFactory to add widget generation capability.\n */\nexport abstract class AbstractReactFactory<\n\tT extends BaseModel = BaseModel,\n\tE extends CanvasEngine = CanvasEngine\n> extends AbstractModelFactory<T, E> {\n\t/**\n\t * Generates React widgets from the model contained in the event object\n\t */\n\tabstract generateReactWidget(event: GenerateWidgetEvent<T>): JSX.Element;\n}\n","import { Toolkit } from '../Toolkit';\n\nexport interface BaseEvent {\n\tfiring: boolean;\n\tstopPropagation: () => any;\n}\n\nexport interface BaseEventProxy extends BaseEvent {\n\tfunction: string;\n}\n\n/**\n * Listeners are always in the form of an object that contains methods that take events\n */\nexport type BaseListener = {\n\t/**\n\t * Generic event that fires before a specific event was fired\n\t */\n\teventWillFire?: (event: BaseEvent & { function: string }) => void;\n\n\t/**\n\t * Generic event that fires after a specific event was fired (even if it was consumed)\n\t */\n\teventDidFire?: (event: BaseEvent & { function: string }) => void;\n\t/**\n\t * Type for other events that will fire\n\t */\n\t[key: string]: (event: BaseEvent) => any;\n};\n\nexport interface ListenerHandle {\n\t/**\n\t * Used to degister the listener\n\t */\n\tderegister: () => any;\n\t/**\n\t * Original ID of the listener\n\t */\n\tid: string;\n\n\t/**\n\t * Original Listener\n\t */\n\tlistener: BaseListener;\n}\n\n/**\n * Base observer pattern class for working with listeners\n */\nexport class BaseObserver<L extends BaseListener = BaseListener> {\n\tprotected listeners: { [id: string]: L };\n\n\tconstructor() {\n\t\tthis.listeners = {};\n\t}\n\n\tprivate fireEventInternal(fire: boolean, k: keyof L, event: BaseEvent) {\n\t\tthis.iterateListeners((listener) => {\n\t\t\t// returning false here will instruct itteration to stop\n\t\t\tif (!fire && !event.firing) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// fire selected listener\n\t\t\tif (listener[k]) {\n\t\t\t\tlistener[k](event as BaseEvent);\n\t\t\t}\n\t\t});\n\t}\n\n\tfireEvent<K extends keyof L>(event: Partial<Parameters<L[K]>[0]>, k: keyof L) {\n\t\tevent = {\n\t\t\tfiring: true,\n\t\t\tstopPropagation: () => {\n\t\t\t\tevent.firing = false;\n\t\t\t},\n\t\t\t...event\n\t\t};\n\n\t\t// fire pre\n\t\tthis.fireEventInternal(true, 'eventWillFire', {\n\t\t\t...event,\n\t\t\tfunction: k\n\t\t} as BaseEventProxy);\n\n\t\t// fire main event\n\t\tthis.fireEventInternal(false, k, event as BaseEvent);\n\n\t\t// fire post\n\t\tthis.fireEventInternal(true, 'eventDidFire', {\n\t\t\t...event,\n\t\t\tfunction: k\n\t\t} as BaseEventProxy);\n\t}\n\n\titerateListeners(cb: (listener: L) => any) {\n\t\tfor (let id in this.listeners) {\n\t\t\tconst res = cb(this.listeners[id]);\n\t\t\t// cancel itteration on false\n\t\t\tif (res === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetListenerHandle(listener: L): ListenerHandle {\n\t\tfor (let id in this.listeners) {\n\t\t\tif (this.listeners[id] === listener) {\n\t\t\t\treturn {\n\t\t\t\t\tid: id,\n\t\t\t\t\tlistener: listener,\n\t\t\t\t\tderegister: () => {\n\t\t\t\t\t\tdelete this.listeners[id];\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tregisterListener(listener: L): ListenerHandle {\n\t\tconst id = Toolkit.UID();\n\t\tthis.listeners[id] = listener;\n\t\treturn {\n\t\t\tid: id,\n\t\t\tlistener: listener,\n\t\t\tderegister: () => {\n\t\t\t\tdelete this.listeners[id];\n\t\t\t}\n\t\t};\n\t}\n\n\tderegisterListener(listener: L | ListenerHandle) {\n\t\tif (typeof listener === 'object') {\n\t\t\t(listener as ListenerHandle).deregister();\n\t\t\treturn true;\n\t\t}\n\t\tconst handle = this.getListenerHandle(listener);\n\t\tif (handle) {\n\t\t\thandle.deregister();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { BaseEvent, BaseListener, BaseObserver } from './BaseObserver';\nimport { AbstractFactory } from './AbstractFactory';\nimport * as _ from 'lodash';\n\nexport interface FactoryBankListener<F extends AbstractFactory = AbstractFactory> extends BaseListener {\n\t/**\n\t * Factory as added to rhe bank\n\t */\n\tfactoryAdded?: (event: BaseEvent & { factory: F }) => any;\n\n\t/**\n\t * Factory was removed from the bank\n\t */\n\tfactoryRemoved?: (event: BaseEvent & { factory: F }) => any;\n}\n\n/**\n * Store and managed Factories that extend from Abstractfactory\n */\nexport class FactoryBank<\n\tF extends AbstractFactory = AbstractFactory,\n\tL extends FactoryBankListener<F> = FactoryBankListener<F>\n> extends BaseObserver<L> {\n\tprotected factories: { [type: string]: F };\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.factories = {};\n\t}\n\n\tgetFactories(): F[] {\n\t\treturn _.values(this.factories);\n\t}\n\n\tclearFactories() {\n\t\tfor (let factory in this.factories) {\n\t\t\tthis.deregisterFactory(factory);\n\t\t}\n\t}\n\n\tgetFactory<T extends F = F>(type: string): T {\n\t\tif (!this.factories[type]) {\n\t\t\tthrow new Error(`Cannot find factory with type [${type}]`);\n\t\t}\n\t\treturn this.factories[type] as T;\n\t}\n\n\tregisterFactory(factory: F) {\n\t\tfactory.setFactoryBank(this);\n\t\tthis.factories[factory.getType()] = factory;\n\t\t// todo fixme\n\t\tthis.fireEvent<'factoryAdded'>({ factory } as any, 'factoryAdded');\n\t}\n\n\tderegisterFactory(type: string) {\n\t\tconst factory = this.factories[type];\n\t\tfactory.setFactoryBank(null);\n\t\tdelete this.factories[type];\n\t\t// todo fixme\n\t\tthis.fireEvent<'factoryRemoved'>({ factory } as any, 'factoryRemoved');\n\t}\n}\n","import * as _ from 'lodash';\nimport {\n\tBaseEntity,\n\tBaseEntityEvent,\n\tBaseEntityGenerics,\n\tBaseEntityListener,\n\tBaseEntityOptions,\n\tDeserializeEvent\n} from '../../core-models/BaseEntity';\nimport { LayerModel } from '../layer/LayerModel';\nimport { BaseModel } from '../../core-models/BaseModel';\nimport { CanvasEngine } from '../../CanvasEngine';\n\nexport interface DiagramListener extends BaseEntityListener {\n\toffsetUpdated?(event: BaseEntityEvent<CanvasModel> & { offsetX: number; offsetY: number }): void;\n\n\tzoomUpdated?(event: BaseEntityEvent<CanvasModel> & { zoom: number }): void;\n\n\tgridUpdated?(event: BaseEntityEvent<CanvasModel> & { size: number }): void;\n}\n\nexport interface DiagramModelOptions extends BaseEntityOptions {\n\toffsetX?: number;\n\toffsetY?: number;\n\tzoom?: number;\n\tgridSize?: number;\n}\n\nexport interface CanvasModelGenerics extends BaseEntityGenerics {\n\tLISTENER: DiagramListener;\n\tOPTIONS: DiagramModelOptions;\n\tLAYER: LayerModel;\n}\n\nexport class CanvasModel<G extends CanvasModelGenerics = CanvasModelGenerics> extends BaseEntity<G> {\n\tprotected layers: G['LAYER'][];\n\n\tconstructor(options: G['OPTIONS'] = {}) {\n\t\tsuper({\n\t\t\tzoom: 100,\n\t\t\tgridSize: 0,\n\t\t\toffsetX: 0,\n\t\t\toffsetY: 0,\n\t\t\t...options\n\t\t});\n\t\tthis.layers = [];\n\t}\n\n\tgetSelectionEntities(): BaseModel[] {\n\t\treturn _.flatMap(this.layers, (layer) => {\n\t\t\treturn layer.getSelectionEntities();\n\t\t});\n\t}\n\n\tgetSelectedEntities(): BaseModel[] {\n\t\treturn _.filter(this.getSelectionEntities(), (ob) => {\n\t\t\treturn ob.isSelected();\n\t\t});\n\t}\n\n\tclearSelection() {\n\t\t_.forEach(this.getSelectedEntities(), (element) => {\n\t\t\telement.setSelected(false);\n\t\t});\n\t}\n\n\tgetModels(): BaseModel[] {\n\t\treturn _.flatMap(this.layers, (layer) => {\n\t\t\treturn _.values(layer.getModels());\n\t\t});\n\t}\n\n\taddLayer(layer: LayerModel) {\n\t\tlayer.setParent(this);\n\t\tlayer.registerListener({\n\t\t\tentityRemoved: (event: BaseEntityEvent<BaseModel>): void => {}\n\t\t});\n\t\tthis.layers.push(layer);\n\t}\n\n\tremoveLayer(layer: LayerModel) {\n\t\tconst index = this.layers.indexOf(layer);\n\t\tif (index !== -1) {\n\t\t\tthis.layers.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetLayers() {\n\t\treturn this.layers;\n\t}\n\n\tsetGridSize(size: number = 0) {\n\t\tthis.options.gridSize = size;\n\t\tthis.fireEvent({ size: size }, 'gridUpdated');\n\t}\n\n\tgetGridPosition(pos: number) {\n\t\tif (this.options.gridSize === 0) {\n\t\t\treturn pos;\n\t\t}\n\t\treturn this.options.gridSize * Math.floor((pos + this.options.gridSize / 2) / this.options.gridSize);\n\t}\n\n\tdeserializeModel(data: ReturnType<this['serialize']>, engine: CanvasEngine) {\n\t\tconst models: {\n\t\t\t[id: string]: BaseModel;\n\t\t} = {};\n\t\tconst promises: {\n\t\t\t[id: string]: Promise<BaseModel>;\n\t\t} = {};\n\t\tconst resolvers: {\n\t\t\t[id: string]: (model: BaseModel) => any;\n\t\t} = {};\n\n\t\tconst event: DeserializeEvent = {\n\t\t\tdata: data,\n\t\t\tengine: engine,\n\t\t\tregisterModel: (model: BaseModel) => {\n\t\t\t\tmodels[model.getID()] = model;\n\t\t\t\tif (resolvers[model.getID()]) {\n\t\t\t\t\tresolvers[model.getID()](model);\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetModel<T extends BaseModel>(id: string): Promise<T> {\n\t\t\t\tif (models[id]) {\n\t\t\t\t\treturn Promise.resolve(models[id]) as Promise<T>;\n\t\t\t\t}\n\t\t\t\tif (!promises[id]) {\n\t\t\t\t\tpromises[id] = new Promise((resolve) => {\n\t\t\t\t\t\tresolvers[id] = resolve;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn promises[id] as Promise<T>;\n\t\t\t}\n\t\t};\n\t\tthis.deserialize(event);\n\t}\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.offsetX = event.data.offsetX;\n\t\tthis.options.offsetY = event.data.offsetY;\n\t\tthis.options.zoom = event.data.zoom;\n\t\tthis.options.gridSize = event.data.gridSize;\n\t\t_.forEach(event.data.layers, (layer) => {\n\t\t\tconst layerOb = event.engine.getFactoryForLayer(layer.type).generateModel({\n\t\t\t\tinitialConfig: layer\n\t\t\t});\n\t\t\tlayerOb.deserialize({\n\t\t\t\t...event,\n\t\t\t\tdata: layer\n\t\t\t});\n\t\t\tthis.addLayer(layerOb);\n\t\t});\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\toffsetX: this.options.offsetX,\n\t\t\toffsetY: this.options.offsetY,\n\t\t\tzoom: this.options.zoom,\n\t\t\tgridSize: this.options.gridSize,\n\t\t\tlayers: _.map(this.layers, (layer) => {\n\t\t\t\treturn layer.serialize();\n\t\t\t})\n\t\t};\n\t}\n\n\tsetZoomLevel(zoom: number) {\n\t\tthis.options.zoom = zoom;\n\t\tthis.fireEvent({ zoom }, 'zoomUpdated');\n\t}\n\n\tsetOffset(offsetX: number, offsetY: number) {\n\t\tthis.options.offsetX = offsetX;\n\t\tthis.options.offsetY = offsetY;\n\t\tthis.fireEvent({ offsetX, offsetY }, 'offsetUpdated');\n\t}\n\n\tsetOffsetX(offsetX: number) {\n\t\tthis.setOffset(offsetX, this.options.offsetY);\n\t}\n\n\tsetOffsetY(offsetY: number) {\n\t\tthis.setOffset(this.options.offsetX, offsetY);\n\t}\n\n\tgetOffsetY() {\n\t\treturn this.options.offsetY;\n\t}\n\n\tgetOffsetX() {\n\t\treturn this.options.offsetX;\n\t}\n\n\tgetZoomLevel() {\n\t\treturn this.options.zoom;\n\t}\n}\n","import * as React from 'react';\nimport { CanvasEngine } from '../../CanvasEngine';\nimport { TransformLayerWidget } from '../layer/TransformLayerWidget';\nimport styled from '@emotion/styled';\nimport { SmartLayerWidget } from '../layer/SmartLayerWidget';\n\nexport interface DiagramProps {\n\tengine: CanvasEngine;\n\tclassName?: string;\n}\n\nnamespace S {\n\texport const Canvas = styled.div`\n\t\tposition: relative;\n\t\tcursor: move;\n\t\toverflow: hidden;\n\t`;\n}\n\nexport class CanvasWidget extends React.Component<DiagramProps> {\n\tref: React.RefObject<HTMLDivElement>;\n\tkeyUp: any;\n\tkeyDown: any;\n\tcanvasListener: any;\n\n\tconstructor(props: DiagramProps) {\n\t\tsuper(props);\n\n\t\tthis.ref = React.createRef();\n\t\tthis.state = {\n\t\t\taction: null,\n\t\t\tdiagramEngineListener: null\n\t\t};\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.engine.deregisterListener(this.canvasListener);\n\t\tthis.props.engine.setCanvas(null);\n\n\t\tdocument.removeEventListener('keyup', this.keyUp);\n\t\tdocument.removeEventListener('keydown', this.keyDown);\n\t}\n\n\tregisterCanvas() {\n\t\tthis.props.engine.setCanvas(this.ref.current);\n\t\tthis.props.engine.iterateListeners((list) => {\n\t\t\tlist.rendered && list.rendered();\n\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tthis.registerCanvas();\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.canvasListener = this.props.engine.registerListener({\n\t\t\trepaintCanvas: () => {\n\t\t\t\tthis.forceUpdate();\n\t\t\t}\n\t\t});\n\n\t\tthis.keyDown = (event) => {\n\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t};\n\t\tthis.keyUp = (event) => {\n\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t};\n\n\t\tdocument.addEventListener('keyup', this.keyUp);\n\t\tdocument.addEventListener('keydown', this.keyDown);\n\t\tthis.registerCanvas();\n\t}\n\n\trender() {\n\t\tconst engine = this.props.engine;\n\t\tconst model = engine.getModel();\n\n\t\treturn (\n\t\t\t<S.Canvas\n\t\t\t\tclassName={this.props.className}\n\t\t\t\tref={this.ref}\n\t\t\t\tonWheel={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonMouseDown={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonMouseUp={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}\n\t\t\t\tonMouseMove={(event) => {\n\t\t\t\t\tthis.props.engine.getActionEventBus().fireAction({ event });\n\t\t\t\t}}>\n\t\t\t\t{model.getLayers().map((layer) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<TransformLayerWidget layer={layer} key={layer.getID()}>\n\t\t\t\t\t\t\t<SmartLayerWidget layer={layer} engine={this.props.engine} key={layer.getID()} />\n\t\t\t\t\t\t</TransformLayerWidget>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</S.Canvas>\n\t\t);\n\t}\n}\n","import { BaseModel, BaseModelGenerics, BaseModelOptions } from '../../core-models/BaseModel';\nimport { CanvasModel } from '../canvas/CanvasModel';\nimport * as _ from 'lodash';\nimport { CanvasEngine } from '../../CanvasEngine';\nimport { FactoryBank } from '../../core/FactoryBank';\nimport { AbstractModelFactory } from '../../core/AbstractModelFactory';\nimport { DeserializeEvent } from '../../core-models/BaseEntity';\n\nexport interface LayerModelOptions extends BaseModelOptions {\n\tisSvg?: boolean;\n\ttransformed?: boolean;\n}\n\nexport interface LayerModelGenerics extends BaseModelGenerics {\n\tOPTIONS: LayerModelOptions;\n\tPARENT: CanvasModel;\n\tCHILDREN: BaseModel;\n\tENGINE: CanvasEngine;\n}\n\nexport abstract class LayerModel<G extends LayerModelGenerics = LayerModelGenerics> extends BaseModel<G> {\n\tprotected models: { [id: string]: G['CHILDREN'] };\n\tprotected repaintEnabled: boolean;\n\n\tconstructor(options: G['OPTIONS'] = {}) {\n\t\tsuper(options);\n\t\tthis.models = {};\n\t\tthis.repaintEnabled = true;\n\t}\n\n\t/**\n\t * This is used for deserialization\n\t */\n\tabstract getChildModelFactoryBank(engine: G['ENGINE']): FactoryBank<AbstractModelFactory<BaseModel>>;\n\n\tdeserialize(event: DeserializeEvent<this>) {\n\t\tsuper.deserialize(event);\n\t\tthis.options.isSvg = !!event.data.isSvg;\n\t\tthis.options.transformed = !!event.data.transformed;\n\t\t_.forEach(event.data.models, (model) => {\n\t\t\tconst modelOb = this.getChildModelFactoryBank(event.engine).getFactory(model.type).generateModel({\n\t\t\t\tinitialConfig: model\n\t\t\t});\n\t\t\tmodelOb.deserialize({\n\t\t\t\t...event,\n\t\t\t\tdata: model\n\t\t\t});\n\t\t\tthis.addModel(modelOb);\n\t\t});\n\t}\n\n\tserialize() {\n\t\treturn {\n\t\t\t...super.serialize(),\n\t\t\tisSvg: this.options.isSvg,\n\t\t\ttransformed: this.options.transformed,\n\t\t\tmodels: _.mapValues(this.models, (model) => {\n\t\t\t\treturn model.serialize();\n\t\t\t})\n\t\t};\n\t}\n\n\tisRepaintEnabled() {\n\t\treturn this.repaintEnabled;\n\t}\n\n\tallowRepaint(allow: boolean = true) {\n\t\tthis.repaintEnabled = allow;\n\t}\n\n\tremove() {\n\t\tif (this.parent) {\n\t\t\tthis.parent.removeLayer(this);\n\t\t}\n\t\tsuper.remove();\n\t}\n\n\taddModel(model: G['CHILDREN']) {\n\t\tmodel.setParent(this);\n\t\tthis.models[model.getID()] = model;\n\t}\n\n\tgetSelectionEntities(): Array<BaseModel> {\n\t\treturn _.flatMap(this.models, (model) => {\n\t\t\treturn model.getSelectionEntities();\n\t\t});\n\t}\n\n\tgetModels() {\n\t\treturn this.models;\n\t}\n\n\tgetModel(id: string) {\n\t\treturn this.models[id];\n\t}\n\n\tremoveModel(id: string | G['CHILDREN']): boolean {\n\t\tconst _id = typeof id === 'string' ? id : id.getID();\n\t\tif (this.models[_id]) {\n\t\t\tdelete this.models[_id];\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n","import * as React from 'react';\nimport { LayerModel } from './LayerModel';\nimport { CanvasEngine } from '../../CanvasEngine';\n\nexport interface SmartLayerWidgetProps {\n\tlayer: LayerModel;\n\tengine: CanvasEngine;\n}\n\nexport class SmartLayerWidget extends React.Component<SmartLayerWidgetProps> {\n\tshouldComponentUpdate(): boolean {\n\t\treturn this.props.layer.isRepaintEnabled();\n\t}\n\n\trender() {\n\t\treturn this.props.engine.getFactoryForLayer(this.props.layer).generateReactWidget({ model: this.props.layer });\n\t}\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\nimport { CSSProperties } from 'react';\nimport { LayerModel } from './LayerModel';\nimport { css } from '@emotion/react';\n\nexport interface TransformLayerWidgetProps {\n\tlayer: LayerModel;\n}\n\nnamespace S {\n\tconst shared = css`\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tright: 0;\n\t\tbottom: 0;\n\t\tposition: absolute;\n\t\tpointer-events: none;\n\t\ttransform-origin: 0 0;\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\toverflow: visible;\n\t`;\n\n\texport const DivLayer = styled.div`\n\t\t${shared}\n\t`;\n\n\texport const SvgLayer = styled.svg`\n\t\t${shared}\n\t`;\n}\n\nexport class TransformLayerWidget extends React.Component<TransformLayerWidgetProps> {\n\tconstructor(props: TransformLayerWidgetProps) {\n\t\tsuper(props);\n\t\tthis.state = {};\n\t}\n\n\tgetTransform() {\n\t\tconst model = this.props.layer.getParent();\n\t\treturn `\n\t\t\ttranslate(\n\t\t\t\t${model.getOffsetX()}px,\n\t\t\t\t${model.getOffsetY()}px)\n\t\t\tscale(\n\t\t\t\t${model.getZoomLevel() / 100.0}\n\t\t\t)\n  \t`;\n\t}\n\n\tgetTransformStyle(): CSSProperties {\n\t\tif (this.props.layer.getOptions().transformed) {\n\t\t\treturn {\n\t\t\t\ttransform: this.getTransform()\n\t\t\t};\n\t\t}\n\t\treturn {};\n\t}\n\n\trender() {\n\t\tif (this.props.layer.getOptions().isSvg) {\n\t\t\treturn <S.SvgLayer style={this.getTransformStyle()}>{this.props.children}</S.SvgLayer>;\n\t\t}\n\t\treturn <S.DivLayer style={this.getTransformStyle()}>{this.props.children}</S.DivLayer>;\n\t}\n}\n","import * as React from 'react';\nimport { AbstractReactFactory, GenerateWidgetEvent } from '../../core/AbstractReactFactory';\nimport { SelectionLayerModel } from './SelectionLayerModel';\nimport { GenerateModelEvent } from '../../core/AbstractModelFactory';\nimport { SelectionBoxWidget } from './SelectionBoxWidget';\n\nexport class SelectionBoxLayerFactory extends AbstractReactFactory<SelectionLayerModel> {\n\tconstructor() {\n\t\tsuper('selection');\n\t}\n\n\tgenerateModel(event: GenerateModelEvent): SelectionLayerModel {\n\t\treturn new SelectionLayerModel();\n\t}\n\n\tgenerateReactWidget(event: GenerateWidgetEvent<SelectionLayerModel>): JSX.Element {\n\t\treturn <SelectionBoxWidget rect={event.model.box} />;\n\t}\n}\n","import * as React from 'react';\nimport styled from '@emotion/styled';\n\nexport interface SelectionBoxWidgetProps {\n\trect: ClientRect;\n}\n\nnamespace S {\n\texport const Container = styled.div`\n\t\tposition: absolute;\n\t\tbackground-color: rgba(0, 192, 255, 0.2);\n\t\tborder: solid 2px rgb(0, 192, 255);\n\t`;\n}\n\nexport class SelectionBoxWidget extends React.Component<SelectionBoxWidgetProps> {\n\trender() {\n\t\tconst { rect } = this.props;\n\t\treturn (\n\t\t\t<S.Container\n\t\t\t\tstyle={{\n\t\t\t\t\ttop: rect.top,\n\t\t\t\t\tleft: rect.left,\n\t\t\t\t\twidth: rect.width,\n\t\t\t\t\theight: rect.height\n\t\t\t\t}}\n\t\t\t/>\n\t\t);\n\t}\n}\n","import { LayerModel } from '../layer/LayerModel';\nimport { FactoryBank } from '../../core/FactoryBank';\nimport { AbstractModelFactory } from '../../core/AbstractModelFactory';\nimport { BaseModel } from '../../core-models/BaseModel';\n\nexport class SelectionLayerModel extends LayerModel {\n\tbox: ClientRect;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\ttransformed: false,\n\t\t\tisSvg: false,\n\t\t\ttype: 'selection'\n\t\t});\n\t}\n\n\tsetBox(rect: ClientRect) {\n\t\tthis.box = rect;\n\t}\n\n\tgetChildModelFactoryBank(): FactoryBank<AbstractModelFactory<BaseModel>> {\n\t\t// is not used as it doesnt serialize\n\t\treturn null;\n\t}\n}\n","export * from './CanvasEngine';\nexport * from './Toolkit';\nexport * from './entities/canvas/CanvasModel';\n\nexport * from './core/AbstractFactory';\nexport * from './core/AbstractModelFactory';\nexport * from './core/AbstractReactFactory';\nexport * from './core/BaseObserver';\nexport * from './core/FactoryBank';\nexport * from './core/ModelGeometryInterface';\n\nexport * from './core-actions/Action';\nexport * from './core-actions/ActionEventBus';\n\nexport * from './core-models/BaseEntity';\nexport * from './core-models/BaseModel';\nexport * from './core-models/BasePositionModel';\n\nexport * from './entities/canvas/CanvasModel';\nexport * from './entities/canvas/CanvasWidget';\n\nexport * from './entities/layer/LayerModel';\nexport * from './entities/layer/TransformLayerWidget';\nexport * from './entities/layer/SmartLayerWidget';\n\nexport * from './entities/selection/SelectionBoxLayerFactory';\nexport * from './entities/selection/SelectionBoxWidget';\nexport * from './entities/selection/SelectionLayerModel';\n\nexport * from './widgets/PeformanceWidget';\n\nexport * from './core-state/AbstractDisplacementState';\nexport * from './core-state/State';\nexport * from './core-state/StateMachine';\n\nexport * from './states/DefaultState';\nexport * from './states/DragCanvasState';\nexport * from './states/SelectingState';\nexport * from './states/SelectionBoxState';\nexport * from './states/MoveItemsState';\n\nexport * from './actions/DeleteItemsAction';\nexport * from './actions/ZoomCanvasAction';\n","import { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { MouseEvent } from 'react';\nimport { DragCanvasState } from './DragCanvasState';\nimport { SelectingState } from './SelectingState';\nimport { MoveItemsState } from './MoveItemsState';\n\nexport class DefaultState extends State {\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'default'\n\t\t});\n\t\tthis.childStates = [new SelectingState()];\n\n\t\t// determine what was clicked on\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\n\t\t\t\t\t// the canvas was clicked on, transition to the dragging canvas state\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\tthis.transitionWithEvent(new DragCanvasState(), event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.transitionWithEvent(new MoveItemsState(), event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\n\nexport interface DragCanvasStateOptions {\n\t/**\n\t * If enabled, the canvas is available to drag\n\t */\n\tallowDrag?: boolean;\n}\n\nexport class DragCanvasState extends AbstractDisplacementState {\n\t// store this as we drag the canvas\n\tinitialCanvasX: number;\n\tinitialCanvasY: number;\n\tconfig: DragCanvasStateOptions;\n\n\tconstructor(options: DragCanvasStateOptions = {}) {\n\t\tsuper({\n\t\t\tname: 'drag-canvas'\n\t\t});\n\t\tthis.config = {\n\t\t\tallowDrag: true,\n\t\t\t...options\n\t\t};\n\t}\n\n\tasync activated(prev) {\n\t\tsuper.activated(prev);\n\t\tthis.engine.getModel().clearSelection();\n\t\tawait this.engine.repaintCanvas(true);\n\n\t\t// we can block layer rendering because we are only targeting the transforms\n\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\tlayer.allowRepaint(false);\n\t\t}\n\n\t\tthis.initialCanvasX = this.engine.getModel().getOffsetX();\n\t\tthis.initialCanvasY = this.engine.getModel().getOffsetY();\n\t}\n\n\tdeactivated(next: State) {\n\t\tsuper.deactivated(next);\n\t\tfor (let layer of this.engine.getModel().getLayers()) {\n\t\t\tlayer.allowRepaint(true);\n\t\t}\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tif (this.config.allowDrag) {\n\t\t\tthis.engine\n\t\t\t\t.getModel()\n\t\t\t\t.setOffset(this.initialCanvasX + event.displacementX, this.initialCanvasY + event.displacementY);\n\t\t\tthis.engine.repaintCanvas();\n\t\t}\n\t}\n}\n","import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { BasePositionModel } from '../core-models/BasePositionModel';\nimport { Point } from '@projectstorm/geometry';\nimport { BaseModel } from '../core-models/BaseModel';\nimport { CanvasEngine } from '../CanvasEngine';\n\nexport class MoveItemsState<E extends CanvasEngine = CanvasEngine> extends AbstractDisplacementState<E> {\n\tinitialPositions: {\n\t\t[id: string]: {\n\t\t\tpoint: Point;\n\t\t\titem: BaseModel;\n\t\t};\n\t};\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'move-items'\n\t\t});\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<React.MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (!element.isSelected()) {\n\t\t\t\t\t\tthis.engine.getModel().clearSelection();\n\t\t\t\t\t}\n\t\t\t\t\telement.setSelected(true);\n\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tactivated(previous: State) {\n\t\tsuper.activated(previous);\n\t\tthis.initialPositions = {};\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tconst items = this.engine.getModel().getSelectedEntities();\n\t\tconst model = this.engine.getModel();\n\t\tfor (let item of items) {\n\t\t\tif (item instanceof BasePositionModel) {\n\t\t\t\tif (item.isLocked()) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (!this.initialPositions[item.getID()]) {\n\t\t\t\t\tthis.initialPositions[item.getID()] = {\n\t\t\t\t\t\tpoint: item.getPosition(),\n\t\t\t\t\t\titem: item\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tconst pos = this.initialPositions[item.getID()].point;\n\t\t\t\titem.setPosition(\n\t\t\t\t\tmodel.getGridPosition(pos.x + event.virtualDisplacementX),\n\t\t\t\t\tmodel.getGridPosition(pos.y + event.virtualDisplacementY)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tthis.engine.repaintCanvas();\n\t}\n}\n","import { State } from '../core-state/State';\nimport { Action, ActionEvent, InputType } from '../core-actions/Action';\nimport { SelectionBoxState } from './SelectionBoxState';\nimport { MouseEvent } from 'react';\n\nexport class SelectingState extends State {\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'selecting'\n\t\t});\n\t\tthis.keys = ['shift'];\n\n\t\tthis.registerAction(\n\t\t\tnew Action({\n\t\t\t\ttype: InputType.MOUSE_DOWN,\n\t\t\t\tfire: (event: ActionEvent<MouseEvent>) => {\n\t\t\t\t\tconst element = this.engine.getActionEventBus().getModelForEvent(event);\n\n\t\t\t\t\t// go into a selection box on the canvas state\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\tthis.transitionWithEvent(new SelectionBoxState(), event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\telement.setSelected(true);\n\t\t\t\t\t\tthis.engine.repaintCanvas();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n}\n","import { AbstractDisplacementState, AbstractDisplacementStateEvent } from '../core-state/AbstractDisplacementState';\nimport { State } from '../core-state/State';\nimport { SelectionLayerModel } from '../entities/selection/SelectionLayerModel';\nimport { Rectangle } from '@projectstorm/geometry';\nimport { ModelGeometryInterface } from '../core/ModelGeometryInterface';\n\nexport class SelectionBoxState extends AbstractDisplacementState {\n\tlayer: SelectionLayerModel;\n\n\tconstructor() {\n\t\tsuper({\n\t\t\tname: 'selection-box'\n\t\t});\n\t}\n\n\tactivated(previous: State) {\n\t\tsuper.activated(previous);\n\t\tthis.layer = new SelectionLayerModel();\n\t\tthis.engine.getModel().addLayer(this.layer);\n\t}\n\n\tdeactivated(next: State) {\n\t\tsuper.deactivated(next);\n\t\tthis.layer.remove();\n\t\tthis.engine.repaintCanvas();\n\t}\n\n\tgetBoxDimensions(event: AbstractDisplacementStateEvent): ClientRect {\n\t\tconst rel = this.engine.getRelativePoint(event.event.clientX, event.event.clientY);\n\n\t\treturn {\n\t\t\tleft: rel.x > this.initialXRelative ? this.initialXRelative : rel.x,\n\t\t\ttop: rel.y > this.initialYRelative ? this.initialYRelative : rel.y,\n\t\t\twidth: Math.abs(rel.x - this.initialXRelative),\n\t\t\theight: Math.abs(rel.y - this.initialYRelative),\n\t\t\tright: rel.x < this.initialXRelative ? this.initialXRelative : rel.x,\n\t\t\tbottom: rel.y < this.initialYRelative ? this.initialYRelative : rel.y\n\t\t};\n\t}\n\n\tfireMouseMoved(event: AbstractDisplacementStateEvent) {\n\t\tthis.layer.setBox(this.getBoxDimensions(event));\n\n\t\tconst relative = this.engine.getRelativeMousePoint({\n\t\t\tclientX: this.initialX,\n\t\t\tclientY: this.initialY\n\t\t});\n\t\tif (event.virtualDisplacementX < 0) {\n\t\t\trelative.x -= Math.abs(event.virtualDisplacementX);\n\t\t}\n\t\tif (event.virtualDisplacementY < 0) {\n\t\t\trelative.y -= Math.abs(event.virtualDisplacementY);\n\t\t}\n\t\tconst rect = new Rectangle(relative, Math.abs(event.virtualDisplacementX), Math.abs(event.virtualDisplacementY));\n\n\t\tfor (let model of this.engine.getModel().getSelectionEntities()) {\n\t\t\tif (((model as unknown) as ModelGeometryInterface).getBoundingBox) {\n\t\t\t\tconst bounds = ((model as unknown) as ModelGeometryInterface).getBoundingBox();\n\t\t\t\tif (rect.containsPoint(bounds.getTopLeft()) && rect.containsPoint(bounds.getBottomRight())) {\n\t\t\t\t\tmodel.setSelected(true);\n\t\t\t\t} else {\n\t\t\t\t\tmodel.setSelected(false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.engine.repaintCanvas();\n\t}\n}\n","import * as React from 'react';\nimport * as _ from 'lodash';\nimport { BaseModel } from '../core-models/BaseModel';\n\nexport interface PeformanceWidgetProps {\n\tchildren: () => JSX.Element;\n\tserialized: object;\n\tmodel: BaseModel;\n}\n\nexport interface PeformanceWidgetState {}\n\nexport class PeformanceWidget extends React.Component<PeformanceWidgetProps, PeformanceWidgetState> {\n\tshouldComponentUpdate(\n\t\tnextProps: Readonly<PeformanceWidgetProps>,\n\t\tnextState: Readonly<PeformanceWidgetState>,\n\t\tnextContext: any\n\t): boolean {\n\t\tif (!this.props.model.performanceTune()) {\n\t\t\treturn true;\n\t\t}\n\t\t// deserialization event\n\t\tif (this.props.model !== nextProps.model) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// change event\n\t\treturn !_.isEqual(this.props.serialized, nextProps.serialized);\n\t}\n\n\trender() {\n\t\treturn this.props.children();\n\t}\n}\n","module.exports = require(\"@emotion/react\");;","module.exports = require(\"@emotion/styled\");;","module.exports = require(\"@projectstorm/geometry\");;","module.exports = require(\"closest\");;","module.exports = require(\"lodash\");;","module.exports = require(\"react\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(418);\n"],"sourceRoot":""}